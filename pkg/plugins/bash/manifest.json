{
  "name": "bash",
  "version": "1.0.0",
  "description": "Bash 脚本执行插件，支持执行 bash 脚本、命令和脚本文件，适用于自动化任务和 CI/CD 流程",
  "author": "Arcade Team <support@go-arcade.io>",
  "homepage": "https://github.com/go-arcade/arcade",
  "repository": "https://github.com/go-arcade/arcade",
  "pluginType": "custom",
  "entryPoint": "bash",
  "dependencies": [],
  "configSchema": {
    "type": "object",
    "properties": {
      "shell": {
        "type": "string",
        "description": "Shell 可执行文件的路径",
        "default": "/bin/bash",
        "examples": ["/bin/bash", "/bin/sh", "/bin/zsh"]
      },
      "work_dir": {
        "type": "string",
        "description": "脚本执行的工作目录",
        "default": "当前目录"
      },
      "timeout": {
        "type": "integer",
        "description": "脚本执行超时时间（秒），0 表示无限制",
        "default": 300,
        "minimum": 0
      },
      "env": {
        "type": "object",
        "description": "默认环境变量",
        "additionalProperties": {
          "type": "string"
        },
        "default": {}
      },
      "allow_dangerous": {
        "type": "boolean",
        "description": "是否允许危险操作（如 rm -rf /）",
        "default": false
      }
    },
    "required": []
  },
  "actionsSchema": {
    "script": {
      "description": "执行 bash 脚本字符串",
      "params": {
        "type": "object",
        "properties": {
          "script": {
            "type": "string",
            "description": "要执行的 bash 脚本内容",
            "examples": [
              "#!/bin/bash\necho 'Hello, World!'\ndate\nls -la"
            ]
          },
          "args": {
            "type": "array",
            "description": "传递给脚本的参数列表",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "env": {
            "type": "object",
            "description": "额外的环境变量",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          }
        },
        "required": ["script"]
      },
      "returns": {
        "type": "object",
        "properties": {
          "stdout": {
            "type": "string",
            "description": "标准输出"
          },
          "stderr": {
            "type": "string",
            "description": "标准错误"
          },
          "exit_code": {
            "type": "integer",
            "description": "退出代码"
          },
          "duration_ms": {
            "type": "integer",
            "description": "执行时长（毫秒）"
          },
          "success": {
            "type": "boolean",
            "description": "是否执行成功"
          },
          "error": {
            "type": "string",
            "description": "错误信息（如果有）"
          }
        }
      }
    },
    "command": {
      "description": "执行单条 bash 命令",
      "params": {
        "type": "object",
        "properties": {
          "command": {
            "type": "string",
            "description": "要执行的命令",
            "examples": [
              "ls -la",
              "echo $PATH",
              "git status",
              "npm install"
            ]
          },
          "env": {
            "type": "object",
            "description": "额外的环境变量",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          }
        },
        "required": ["command"]
      },
      "returns": {
        "type": "object",
        "properties": {
          "stdout": {"type": "string"},
          "stderr": {"type": "string"},
          "exit_code": {"type": "integer"},
          "duration_ms": {"type": "integer"},
          "success": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    },
    "file": {
      "description": "执行 bash 脚本文件",
      "params": {
        "type": "object",
        "properties": {
          "file_path": {
            "type": "string",
            "description": "脚本文件路径（绝对路径或相对于工作目录）",
            "examples": [
              "/path/to/script.sh",
              "./scripts/build.sh",
              "deploy/deploy.sh"
            ]
          },
          "args": {
            "type": "array",
            "description": "传递给脚本的参数列表",
            "items": {
              "type": "string"
            },
            "default": []
          },
          "env": {
            "type": "object",
            "description": "额外的环境变量",
            "additionalProperties": {
              "type": "string"
            },
            "default": {}
          }
        },
        "required": ["file_path"]
      },
      "returns": {
        "type": "object",
        "properties": {
          "stdout": {"type": "string"},
          "stderr": {"type": "string"},
          "exit_code": {"type": "integer"},
          "duration_ms": {"type": "integer"},
          "success": {"type": "boolean"},
          "error": {"type": "string"}
        }
      }
    }
  },
  "icon": "https://cdn.example.com/icons/bash.png",
  "tags": ["bash", "shell", "script", "automation", "custom", "executor"],
  "minVersion": "1.0.0",
  "resources": {
    "cpu": "100m",
    "memory": "128Mi",
    "disk": "50Mi"
  },
  "examples": [
    {
      "name": "执行简单命令",
      "description": "执行 ls 命令列出当前目录",
      "config": {
        "work_dir": "/tmp"
      },
      "action": "command",
      "params": {
        "command": "ls -la"
      }
    },
    {
      "name": "执行脚本",
      "description": "执行一个简单的 Hello World 脚本",
      "config": {},
      "action": "script",
      "params": {
        "script": "#!/bin/bash\\necho 'Hello, World!'\\ndate\\nuname -a"
      }
    },
    {
      "name": "执行脚本文件",
      "description": "执行指定的脚本文件并传递参数",
      "config": {
        "work_dir": "/app"
      },
      "action": "file",
      "params": {
        "file_path": "./scripts/deploy.sh",
        "args": ["production", "v1.0.0"],
        "env": {
          "DEPLOY_ENV": "production"
        }
      }
    },
    {
      "name": "构建项目",
      "description": "使用脚本构建 Go 项目",
      "config": {
        "work_dir": "/go/src/myproject",
        "timeout": 600
      },
      "action": "script",
      "params": {
        "script": "#!/bin/bash\\nset -e\\ngo mod download\\ngo build -o bin/app ./cmd/main.go\\necho 'Build completed'",
        "env": {
          "CGO_ENABLED": "0",
          "GOOS": "linux",
          "GOARCH": "amd64"
        }
      }
    }
  ],
  "security": {
    "capabilities": ["exec", "file_read", "file_write"],
    "dangerous_operations": [
      "rm -rf /",
      "mkfs",
      "dd if=/dev/zero",
      "fork bomb"
    ],
    "recommendations": [
      "不要在生产环境中设置 allow_dangerous 为 true",
      "限制插件只能访问特定目录",
      "为脚本设置合理的超时时间",
      "定期审查执行的脚本内容"
    ]
  }
}

