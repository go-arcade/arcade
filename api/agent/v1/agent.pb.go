// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/agent/v1/proto/agent.proto

package v1

import (
	v1 "github.com/observabil/arcade/api/job/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Agent状态枚举
type AgentStatus int32

const (
	AgentStatus_AGENT_STATUS_UNKNOWN AgentStatus = 0
	AgentStatus_AGENT_STATUS_ONLINE  AgentStatus = 1 // 在线
	AgentStatus_AGENT_STATUS_OFFLINE AgentStatus = 2 // 离线
	AgentStatus_AGENT_STATUS_BUSY    AgentStatus = 3 // 忙碌
	AgentStatus_AGENT_STATUS_IDLE    AgentStatus = 4 // 空闲
)

// Enum value maps for AgentStatus.
var (
	AgentStatus_name = map[int32]string{
		0: "AGENT_STATUS_UNKNOWN",
		1: "AGENT_STATUS_ONLINE",
		2: "AGENT_STATUS_OFFLINE",
		3: "AGENT_STATUS_BUSY",
		4: "AGENT_STATUS_IDLE",
	}
	AgentStatus_value = map[string]int32{
		"AGENT_STATUS_UNKNOWN": 0,
		"AGENT_STATUS_ONLINE":  1,
		"AGENT_STATUS_OFFLINE": 2,
		"AGENT_STATUS_BUSY":    3,
		"AGENT_STATUS_IDLE":    4,
	}
)

func (x AgentStatus) Enum() *AgentStatus {
	p := new(AgentStatus)
	*p = x
	return p
}

func (x AgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_agent_v1_proto_agent_proto_enumTypes[0].Descriptor()
}

func (AgentStatus) Type() protoreflect.EnumType {
	return &file_api_agent_v1_proto_agent_proto_enumTypes[0]
}

func (x AgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus.Descriptor instead.
func (AgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{0}
}

// 标签操作符
type LabelOperator int32

const (
	LabelOperator_LABEL_OPERATOR_UNKNOWN    LabelOperator = 0
	LabelOperator_LABEL_OPERATOR_IN         LabelOperator = 1 // 标签值在values列表中
	LabelOperator_LABEL_OPERATOR_NOT_IN     LabelOperator = 2 // 标签值不在values列表中
	LabelOperator_LABEL_OPERATOR_EXISTS     LabelOperator = 3 // 标签key存在
	LabelOperator_LABEL_OPERATOR_NOT_EXISTS LabelOperator = 4 // 标签key不存在
	LabelOperator_LABEL_OPERATOR_GT         LabelOperator = 5 // 标签值大于指定值（用于数值比较）
	LabelOperator_LABEL_OPERATOR_LT         LabelOperator = 6 // 标签值小于指定值（用于数值比较）
)

// Enum value maps for LabelOperator.
var (
	LabelOperator_name = map[int32]string{
		0: "LABEL_OPERATOR_UNKNOWN",
		1: "LABEL_OPERATOR_IN",
		2: "LABEL_OPERATOR_NOT_IN",
		3: "LABEL_OPERATOR_EXISTS",
		4: "LABEL_OPERATOR_NOT_EXISTS",
		5: "LABEL_OPERATOR_GT",
		6: "LABEL_OPERATOR_LT",
	}
	LabelOperator_value = map[string]int32{
		"LABEL_OPERATOR_UNKNOWN":    0,
		"LABEL_OPERATOR_IN":         1,
		"LABEL_OPERATOR_NOT_IN":     2,
		"LABEL_OPERATOR_EXISTS":     3,
		"LABEL_OPERATOR_NOT_EXISTS": 4,
		"LABEL_OPERATOR_GT":         5,
		"LABEL_OPERATOR_LT":         6,
	}
)

func (x LabelOperator) Enum() *LabelOperator {
	p := new(LabelOperator)
	*p = x
	return p
}

func (x LabelOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LabelOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_api_agent_v1_proto_agent_proto_enumTypes[1].Descriptor()
}

func (LabelOperator) Type() protoreflect.EnumType {
	return &file_api_agent_v1_proto_agent_proto_enumTypes[1]
}

func (x LabelOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LabelOperator.Descriptor instead.
func (LabelOperator) EnumDescriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{1}
}

// 心跳请求
type HeartbeatRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AgentId           string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                            // Agent唯一标识
	Status            AgentStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=api.agent.v1.AgentStatus" json:"status,omitempty"`                                              // Agent当前状态
	RunningJobsCount  int32                  `protobuf:"varint,3,opt,name=running_jobs_count,json=runningJobsCount,proto3" json:"running_jobs_count,omitempty"`                              // 正在执行的任务数
	MaxConcurrentJobs int32                  `protobuf:"varint,4,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`                           // 最大并发任务数
	Metrics           map[string]string      `protobuf:"bytes,5,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Agent指标（CPU、内存等）
	Labels            map[string]string      `protobuf:"bytes,6,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`   // Agent标签（可动态更新）
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeartbeatRequest) Reset() {
	*x = HeartbeatRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatRequest) ProtoMessage() {}

func (x *HeartbeatRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatRequest.ProtoReflect.Descriptor instead.
func (*HeartbeatRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{0}
}

func (x *HeartbeatRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *HeartbeatRequest) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

func (x *HeartbeatRequest) GetRunningJobsCount() int32 {
	if x != nil {
		return x.RunningJobsCount
	}
	return 0
}

func (x *HeartbeatRequest) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

func (x *HeartbeatRequest) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *HeartbeatRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 心跳响应
type HeartbeatResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"` // 服务器时间戳（用于时间同步）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatResponse) Reset() {
	*x = HeartbeatResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatResponse) ProtoMessage() {}

func (x *HeartbeatResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatResponse.ProtoReflect.Descriptor instead.
func (*HeartbeatResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{1}
}

func (x *HeartbeatResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *HeartbeatResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *HeartbeatResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// Agent注册请求
type RegisterRequest struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AgentId           string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                          // Agent唯一标识（可选，不提供则由Server生成）
	Hostname          string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`                                                                       // 主机名
	Ip                string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`                                                                                   // IP地址
	Os                string                 `protobuf:"bytes,4,opt,name=os,proto3" json:"os,omitempty"`                                                                                   // 操作系统
	Arch              string                 `protobuf:"bytes,5,opt,name=arch,proto3" json:"arch,omitempty"`                                                                               // 架构（amd64、arm64等）
	Version           string                 `protobuf:"bytes,6,opt,name=version,proto3" json:"version,omitempty"`                                                                         // Agent版本
	Tags              []string               `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`                                                                               // Agent标签（用于任务路由）
	MaxConcurrentJobs int32                  `protobuf:"varint,8,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`                         // 最大并发任务数
	Labels            map[string]string      `protobuf:"bytes,9,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义标签
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterRequest) Reset() {
	*x = RegisterRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterRequest) ProtoMessage() {}

func (x *RegisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterRequest.ProtoReflect.Descriptor instead.
func (*RegisterRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{2}
}

func (x *RegisterRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegisterRequest) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *RegisterRequest) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *RegisterRequest) GetOs() string {
	if x != nil {
		return x.Os
	}
	return ""
}

func (x *RegisterRequest) GetArch() string {
	if x != nil {
		return x.Arch
	}
	return ""
}

func (x *RegisterRequest) GetVersion() string {
	if x != nil {
		return x.Version
	}
	return ""
}

func (x *RegisterRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *RegisterRequest) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

func (x *RegisterRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// Agent注册响应
type RegisterResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Success           bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message           string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	AgentId           string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                // Server分配或确认的Agent ID
	HeartbeatInterval int64                  `protobuf:"varint,4,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"` // 心跳间隔（秒）
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *RegisterResponse) Reset() {
	*x = RegisterResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterResponse) ProtoMessage() {}

func (x *RegisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterResponse.ProtoReflect.Descriptor instead.
func (*RegisterResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{3}
}

func (x *RegisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RegisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RegisterResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *RegisterResponse) GetHeartbeatInterval() int64 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

// Agent注销请求
type UnregisterRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // 注销原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterRequest) Reset() {
	*x = UnregisterRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterRequest) ProtoMessage() {}

func (x *UnregisterRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterRequest.ProtoReflect.Descriptor instead.
func (*UnregisterRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{4}
}

func (x *UnregisterRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UnregisterRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// Agent注销响应
type UnregisterResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UnregisterResponse) Reset() {
	*x = UnregisterResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UnregisterResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UnregisterResponse) ProtoMessage() {}

func (x *UnregisterResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UnregisterResponse.ProtoReflect.Descriptor instead.
func (*UnregisterResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{5}
}

func (x *UnregisterResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UnregisterResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 获取任务请求
type FetchJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	MaxJobs       int32                  `protobuf:"varint,2,opt,name=max_jobs,json=maxJobs,proto3" json:"max_jobs,omitempty"`                                                         // 最多获取的任务数
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`                                                                               // Agent支持的标签（已废弃，建议使用labels）
	Labels        map[string]string      `protobuf:"bytes,4,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Agent标签（用于任务匹配）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJobRequest) Reset() {
	*x = FetchJobRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJobRequest) ProtoMessage() {}

func (x *FetchJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJobRequest.ProtoReflect.Descriptor instead.
func (*FetchJobRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{6}
}

func (x *FetchJobRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *FetchJobRequest) GetMaxJobs() int32 {
	if x != nil {
		return x.MaxJobs
	}
	return 0
}

func (x *FetchJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *FetchJobRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 获取任务响应
type FetchJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Jobs          []*Job                 `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"` // 待执行的任务列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FetchJobResponse) Reset() {
	*x = FetchJobResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FetchJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FetchJobResponse) ProtoMessage() {}

func (x *FetchJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FetchJobResponse.ProtoReflect.Descriptor instead.
func (*FetchJobResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{7}
}

func (x *FetchJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *FetchJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *FetchJobResponse) GetJobs() []*Job {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// 任务定义
type Job struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                                                                   // 任务ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                  // 任务名称
	PipelineId    string                 `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`                                                    // 所属流水线ID
	Stage         int32                  `protobuf:"varint,4,opt,name=stage,proto3" json:"stage,omitempty"`                                                                               // 阶段序号
	Commands      []string               `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`                                                                          // 执行命令列表
	Env           map[string]string      `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`          // 环境变量
	Workspace     string                 `protobuf:"bytes,7,opt,name=workspace,proto3" json:"workspace,omitempty"`                                                                        // 工作目录
	Timeout       int32                  `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                           // 超时时间（秒）
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                  // 任务标签（已废弃，建议使用label_selector）
	Image         string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`                                                                               // Docker镜像（如果需要容器执行）
	Secrets       map[string]string      `protobuf:"bytes,11,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 密钥信息
	Artifacts     []*Artifact            `protobuf:"bytes,12,rep,name=artifacts,proto3" json:"artifacts,omitempty"`                                                                       // 产物配置
	LabelSelector *LabelSelector         `protobuf:"bytes,13,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`                                          // 标签选择器（用于匹配Agent）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Job) Reset() {
	*x = Job{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Job) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Job) ProtoMessage() {}

func (x *Job) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Job.ProtoReflect.Descriptor instead.
func (*Job) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{8}
}

func (x *Job) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *Job) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Job) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *Job) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *Job) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *Job) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *Job) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *Job) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *Job) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *Job) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *Job) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *Job) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *Job) GetLabelSelector() *LabelSelector {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

// 产物定义
type Artifact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`               // 产物名称
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`               // 产物路径（支持glob模式）
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"` // 目标存储路径
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{9}
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Artifact) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

// 上报任务状态请求
type ReportJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status        v1.JobStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=api.job.v1.JobStatus" json:"status,omitempty"`                                                  // 任务状态
	ExitCode      int32                  `protobuf:"varint,4,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                                                        // 退出码
	ErrorMessage  string                 `protobuf:"bytes,5,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                             // 错误信息
	StartTime     int64                  `protobuf:"varint,6,opt,name=start_time,json=startTime,proto3" json:"start_time,omitempty"`                                                     // 开始时间（Unix时间戳）
	EndTime       int64                  `protobuf:"varint,7,opt,name=end_time,json=endTime,proto3" json:"end_time,omitempty"`                                                           // 结束时间（Unix时间戳）
	Metrics       map[string]string      `protobuf:"bytes,8,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 任务执行指标
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportJobStatusRequest) Reset() {
	*x = ReportJobStatusRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportJobStatusRequest) ProtoMessage() {}

func (x *ReportJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportJobStatusRequest.ProtoReflect.Descriptor instead.
func (*ReportJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{10}
}

func (x *ReportJobStatusRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ReportJobStatusRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ReportJobStatusRequest) GetStatus() v1.JobStatus {
	if x != nil {
		return x.Status
	}
	return v1.JobStatus(0)
}

func (x *ReportJobStatusRequest) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *ReportJobStatusRequest) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *ReportJobStatusRequest) GetStartTime() int64 {
	if x != nil {
		return x.StartTime
	}
	return 0
}

func (x *ReportJobStatusRequest) GetEndTime() int64 {
	if x != nil {
		return x.EndTime
	}
	return 0
}

func (x *ReportJobStatusRequest) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// 上报任务状态响应
type ReportJobStatusResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportJobStatusResponse) Reset() {
	*x = ReportJobStatusResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportJobStatusResponse) ProtoMessage() {}

func (x *ReportJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportJobStatusResponse.ProtoReflect.Descriptor instead.
func (*ReportJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{11}
}

func (x *ReportJobStatusResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportJobStatusResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 上报任务日志请求
type ReportJobLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Logs          []*LogEntry            `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"` // 日志条目
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportJobLogRequest) Reset() {
	*x = ReportJobLogRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportJobLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportJobLogRequest) ProtoMessage() {}

func (x *ReportJobLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportJobLogRequest.ProtoReflect.Descriptor instead.
func (*ReportJobLogRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{12}
}

func (x *ReportJobLogRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ReportJobLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *ReportJobLogRequest) GetLogs() []*LogEntry {
	if x != nil {
		return x.Logs
	}
	return nil
}

// 日志条目
type LogEntry struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                     // 时间戳
	Level         string                 `protobuf:"bytes,2,opt,name=level,proto3" json:"level,omitempty"`                              // 日志级别（info、warn、error）
	Content       string                 `protobuf:"bytes,3,opt,name=content,proto3" json:"content,omitempty"`                          // 日志内容
	LineNumber    int32                  `protobuf:"varint,4,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"` // 行号
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogEntry) Reset() {
	*x = LogEntry{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogEntry) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogEntry) ProtoMessage() {}

func (x *LogEntry) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogEntry.ProtoReflect.Descriptor instead.
func (*LogEntry) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{13}
}

func (x *LogEntry) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogEntry) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogEntry) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LogEntry) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

// 上报任务日志响应
type ReportJobLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReportJobLogResponse) Reset() {
	*x = ReportJobLogResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReportJobLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReportJobLogResponse) ProtoMessage() {}

func (x *ReportJobLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReportJobLogResponse.ProtoReflect.Descriptor instead.
func (*ReportJobLogResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{14}
}

func (x *ReportJobLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ReportJobLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 取消任务请求
type CancelJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	JobId         string                 `protobuf:"bytes,2,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"` // 取消原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{15}
}

func (x *CancelJobRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *CancelJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CancelJobRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 取消任务响应
type CancelJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobResponse.ProtoReflect.Descriptor instead.
func (*CancelJobResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{16}
}

func (x *CancelJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 更新Agent标签请求
type UpdateLabelsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentId       string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,2,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 要更新的标签（完全替换）
	Tags          []string               `protobuf:"bytes,3,rep,name=tags,proto3" json:"tags,omitempty"`                                                                               // 要更新的标签列表（完全替换）
	Merge         bool                   `protobuf:"varint,4,opt,name=merge,proto3" json:"merge,omitempty"`                                                                            // 是否合并模式（true=合并，false=替换）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLabelsRequest) Reset() {
	*x = UpdateLabelsRequest{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLabelsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelsRequest) ProtoMessage() {}

func (x *UpdateLabelsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelsRequest.ProtoReflect.Descriptor instead.
func (*UpdateLabelsRequest) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{17}
}

func (x *UpdateLabelsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UpdateLabelsRequest) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

func (x *UpdateLabelsRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *UpdateLabelsRequest) GetMerge() bool {
	if x != nil {
		return x.Merge
	}
	return false
}

// 更新Agent标签响应
type UpdateLabelsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Labels        map[string]string      `protobuf:"bytes,3,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 更新后的标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateLabelsResponse) Reset() {
	*x = UpdateLabelsResponse{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateLabelsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateLabelsResponse) ProtoMessage() {}

func (x *UpdateLabelsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateLabelsResponse.ProtoReflect.Descriptor instead.
func (*UpdateLabelsResponse) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{18}
}

func (x *UpdateLabelsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateLabelsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UpdateLabelsResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 标签选择器 - 用于任务匹配Agent
type LabelSelector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 匹配所有指定的标签（AND逻辑）
	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 标签表达式（支持更复杂的匹配规则）
	MatchExpressions []*LabelSelectorRequirement `protobuf:"bytes,2,rep,name=match_expressions,json=matchExpressions,proto3" json:"match_expressions,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LabelSelector) Reset() {
	*x = LabelSelector{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelector) ProtoMessage() {}

func (x *LabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelector.ProtoReflect.Descriptor instead.
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{19}
}

func (x *LabelSelector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *LabelSelector) GetMatchExpressions() []*LabelSelectorRequirement {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

// 标签选择器要求
type LabelSelectorRequirement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                            // 标签key
	Operator      LabelOperator          `protobuf:"varint,2,opt,name=operator,proto3,enum=api.agent.v1.LabelOperator" json:"operator,omitempty"` // 操作符
	Values        []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`                                      // 值列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelSelectorRequirement) Reset() {
	*x = LabelSelectorRequirement{}
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelSelectorRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelectorRequirement) ProtoMessage() {}

func (x *LabelSelectorRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_api_agent_v1_proto_agent_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelectorRequirement.ProtoReflect.Descriptor instead.
func (*LabelSelectorRequirement) Descriptor() ([]byte, []int) {
	return file_api_agent_v1_proto_agent_proto_rawDescGZIP(), []int{20}
}

func (x *LabelSelectorRequirement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LabelSelectorRequirement) GetOperator() LabelOperator {
	if x != nil {
		return x.Operator
	}
	return LabelOperator_LABEL_OPERATOR_UNKNOWN
}

func (x *LabelSelectorRequirement) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_api_agent_v1_proto_agent_proto protoreflect.FileDescriptor

const file_api_agent_v1_proto_agent_proto_rawDesc = "" +
	"\n" +
	"\x1eapi/agent/v1/proto/agent.proto\x12\fapi.agent.v1\x1a\x1aapi/job/v1/proto/job.proto\"\xc0\x03\n" +
	"\x10HeartbeatRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x121\n" +
	"\x06status\x18\x02 \x01(\x0e2\x19.api.agent.v1.AgentStatusR\x06status\x12,\n" +
	"\x12running_jobs_count\x18\x03 \x01(\x05R\x10runningJobsCount\x12.\n" +
	"\x13max_concurrent_jobs\x18\x04 \x01(\x05R\x11maxConcurrentJobs\x12E\n" +
	"\ametrics\x18\x05 \x03(\v2+.api.agent.v1.HeartbeatRequest.MetricsEntryR\ametrics\x12B\n" +
	"\x06labels\x18\x06 \x03(\v2*.api.agent.v1.HeartbeatRequest.LabelsEntryR\x06labels\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"e\n" +
	"\x11HeartbeatResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\"\xd8\x02\n" +
	"\x0fRegisterRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x12\x0e\n" +
	"\x02os\x18\x04 \x01(\tR\x02os\x12\x12\n" +
	"\x04arch\x18\x05 \x01(\tR\x04arch\x12\x18\n" +
	"\aversion\x18\x06 \x01(\tR\aversion\x12\x12\n" +
	"\x04tags\x18\a \x03(\tR\x04tags\x12.\n" +
	"\x13max_concurrent_jobs\x18\b \x01(\x05R\x11maxConcurrentJobs\x12A\n" +
	"\x06labels\x18\t \x03(\v2).api.agent.v1.RegisterRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x90\x01\n" +
	"\x10RegisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12-\n" +
	"\x12heartbeat_interval\x18\x04 \x01(\x03R\x11heartbeatInterval\"F\n" +
	"\x11UnregisterRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"H\n" +
	"\x12UnregisterResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xd9\x01\n" +
	"\x0fFetchJobRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x19\n" +
	"\bmax_jobs\x18\x02 \x01(\x05R\amaxJobs\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12A\n" +
	"\x06labels\x18\x04 \x03(\v2).api.agent.v1.FetchJobRequest.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\x10FetchJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x04jobs\x18\x03 \x03(\v2\x11.api.agent.v1.JobR\x04jobs\"\xbb\x04\n" +
	"\x03Job\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vpipeline_id\x18\x03 \x01(\tR\n" +
	"pipelineId\x12\x14\n" +
	"\x05stage\x18\x04 \x01(\x05R\x05stage\x12\x1a\n" +
	"\bcommands\x18\x05 \x03(\tR\bcommands\x12,\n" +
	"\x03env\x18\x06 \x03(\v2\x1a.api.agent.v1.Job.EnvEntryR\x03env\x12\x1c\n" +
	"\tworkspace\x18\a \x01(\tR\tworkspace\x12\x18\n" +
	"\atimeout\x18\b \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12\x14\n" +
	"\x05image\x18\n" +
	" \x01(\tR\x05image\x128\n" +
	"\asecrets\x18\v \x03(\v2\x1e.api.agent.v1.Job.SecretsEntryR\asecrets\x124\n" +
	"\tartifacts\x18\f \x03(\v2\x16.api.agent.v1.ArtifactR\tartifacts\x12B\n" +
	"\x0elabel_selector\x18\r \x01(\v2\x1b.api.agent.v1.LabelSelectorR\rlabelSelector\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fSecretsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"T\n" +
	"\bArtifact\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12 \n" +
	"\vdestination\x18\x03 \x01(\tR\vdestination\"\xfe\x02\n" +
	"\x16ReportJobStatusRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.api.job.v1.JobStatusR\x06status\x12\x1b\n" +
	"\texit_code\x18\x04 \x01(\x05R\bexitCode\x12#\n" +
	"\rerror_message\x18\x05 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"start_time\x18\x06 \x01(\x03R\tstartTime\x12\x19\n" +
	"\bend_time\x18\a \x01(\x03R\aendTime\x12K\n" +
	"\ametrics\x18\b \x03(\v21.api.agent.v1.ReportJobStatusRequest.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"M\n" +
	"\x17ReportJobStatusResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"s\n" +
	"\x13ReportJobLogRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12*\n" +
	"\x04logs\x18\x03 \x03(\v2\x16.api.agent.v1.LogEntryR\x04logs\"y\n" +
	"\bLogEntry\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05level\x18\x02 \x01(\tR\x05level\x12\x18\n" +
	"\acontent\x18\x03 \x01(\tR\acontent\x12\x1f\n" +
	"\vline_number\x18\x04 \x01(\x05R\n" +
	"lineNumber\"J\n" +
	"\x14ReportJobLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\\\n" +
	"\x10CancelJobRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x15\n" +
	"\x06job_id\x18\x02 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"G\n" +
	"\x11CancelJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xdc\x01\n" +
	"\x13UpdateLabelsRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12E\n" +
	"\x06labels\x18\x02 \x03(\v2-.api.agent.v1.UpdateLabelsRequest.LabelsEntryR\x06labels\x12\x12\n" +
	"\x04tags\x18\x03 \x03(\tR\x04tags\x12\x14\n" +
	"\x05merge\x18\x04 \x01(\bR\x05merge\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xcd\x01\n" +
	"\x14UpdateLabelsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12F\n" +
	"\x06labels\x18\x03 \x03(\v2..api.agent.v1.UpdateLabelsResponse.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf5\x01\n" +
	"\rLabelSelector\x12O\n" +
	"\fmatch_labels\x18\x01 \x03(\v2,.api.agent.v1.LabelSelector.MatchLabelsEntryR\vmatchLabels\x12S\n" +
	"\x11match_expressions\x18\x02 \x03(\v2&.api.agent.v1.LabelSelectorRequirementR\x10matchExpressions\x1a>\n" +
	"\x10MatchLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\x18LabelSelectorRequirement\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x127\n" +
	"\boperator\x18\x02 \x01(\x0e2\x1b.api.agent.v1.LabelOperatorR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values*\x88\x01\n" +
	"\vAgentStatus\x12\x18\n" +
	"\x14AGENT_STATUS_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13AGENT_STATUS_ONLINE\x10\x01\x12\x18\n" +
	"\x14AGENT_STATUS_OFFLINE\x10\x02\x12\x15\n" +
	"\x11AGENT_STATUS_BUSY\x10\x03\x12\x15\n" +
	"\x11AGENT_STATUS_IDLE\x10\x04*\xc5\x01\n" +
	"\rLabelOperator\x12\x1a\n" +
	"\x16LABEL_OPERATOR_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11LABEL_OPERATOR_IN\x10\x01\x12\x19\n" +
	"\x15LABEL_OPERATOR_NOT_IN\x10\x02\x12\x19\n" +
	"\x15LABEL_OPERATOR_EXISTS\x10\x03\x12\x1d\n" +
	"\x19LABEL_OPERATOR_NOT_EXISTS\x10\x04\x12\x15\n" +
	"\x11LABEL_OPERATOR_GT\x10\x05\x12\x15\n" +
	"\x11LABEL_OPERATOR_LT\x10\x062\xa8\x05\n" +
	"\x05Agent\x12N\n" +
	"\tHeartbeat\x12\x1e.api.agent.v1.HeartbeatRequest\x1a\x1f.api.agent.v1.HeartbeatResponse\"\x00\x12K\n" +
	"\bRegister\x12\x1d.api.agent.v1.RegisterRequest\x1a\x1e.api.agent.v1.RegisterResponse\"\x00\x12Q\n" +
	"\n" +
	"Unregister\x12\x1f.api.agent.v1.UnregisterRequest\x1a .api.agent.v1.UnregisterResponse\"\x00\x12K\n" +
	"\bFetchJob\x12\x1d.api.agent.v1.FetchJobRequest\x1a\x1e.api.agent.v1.FetchJobResponse\"\x00\x12`\n" +
	"\x0fReportJobStatus\x12$.api.agent.v1.ReportJobStatusRequest\x1a%.api.agent.v1.ReportJobStatusResponse\"\x00\x12W\n" +
	"\fReportJobLog\x12!.api.agent.v1.ReportJobLogRequest\x1a\".api.agent.v1.ReportJobLogResponse\"\x00\x12N\n" +
	"\tCancelJob\x12\x1e.api.agent.v1.CancelJobRequest\x1a\x1f.api.agent.v1.CancelJobResponse\"\x00\x12W\n" +
	"\fUpdateLabels\x12!.api.agent.v1.UpdateLabelsRequest\x1a\".api.agent.v1.UpdateLabelsResponse\"\x00B.Z,github.com/observabil/arcade/api/agent/v1;v1b\x06proto3"

var (
	file_api_agent_v1_proto_agent_proto_rawDescOnce sync.Once
	file_api_agent_v1_proto_agent_proto_rawDescData []byte
)

func file_api_agent_v1_proto_agent_proto_rawDescGZIP() []byte {
	file_api_agent_v1_proto_agent_proto_rawDescOnce.Do(func() {
		file_api_agent_v1_proto_agent_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_agent_v1_proto_agent_proto_rawDesc), len(file_api_agent_v1_proto_agent_proto_rawDesc)))
	})
	return file_api_agent_v1_proto_agent_proto_rawDescData
}

var file_api_agent_v1_proto_agent_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_agent_v1_proto_agent_proto_msgTypes = make([]protoimpl.MessageInfo, 31)
var file_api_agent_v1_proto_agent_proto_goTypes = []any{
	(AgentStatus)(0),                 // 0: api.agent.v1.AgentStatus
	(LabelOperator)(0),               // 1: api.agent.v1.LabelOperator
	(*HeartbeatRequest)(nil),         // 2: api.agent.v1.HeartbeatRequest
	(*HeartbeatResponse)(nil),        // 3: api.agent.v1.HeartbeatResponse
	(*RegisterRequest)(nil),          // 4: api.agent.v1.RegisterRequest
	(*RegisterResponse)(nil),         // 5: api.agent.v1.RegisterResponse
	(*UnregisterRequest)(nil),        // 6: api.agent.v1.UnregisterRequest
	(*UnregisterResponse)(nil),       // 7: api.agent.v1.UnregisterResponse
	(*FetchJobRequest)(nil),          // 8: api.agent.v1.FetchJobRequest
	(*FetchJobResponse)(nil),         // 9: api.agent.v1.FetchJobResponse
	(*Job)(nil),                      // 10: api.agent.v1.Job
	(*Artifact)(nil),                 // 11: api.agent.v1.Artifact
	(*ReportJobStatusRequest)(nil),   // 12: api.agent.v1.ReportJobStatusRequest
	(*ReportJobStatusResponse)(nil),  // 13: api.agent.v1.ReportJobStatusResponse
	(*ReportJobLogRequest)(nil),      // 14: api.agent.v1.ReportJobLogRequest
	(*LogEntry)(nil),                 // 15: api.agent.v1.LogEntry
	(*ReportJobLogResponse)(nil),     // 16: api.agent.v1.ReportJobLogResponse
	(*CancelJobRequest)(nil),         // 17: api.agent.v1.CancelJobRequest
	(*CancelJobResponse)(nil),        // 18: api.agent.v1.CancelJobResponse
	(*UpdateLabelsRequest)(nil),      // 19: api.agent.v1.UpdateLabelsRequest
	(*UpdateLabelsResponse)(nil),     // 20: api.agent.v1.UpdateLabelsResponse
	(*LabelSelector)(nil),            // 21: api.agent.v1.LabelSelector
	(*LabelSelectorRequirement)(nil), // 22: api.agent.v1.LabelSelectorRequirement
	nil,                              // 23: api.agent.v1.HeartbeatRequest.MetricsEntry
	nil,                              // 24: api.agent.v1.HeartbeatRequest.LabelsEntry
	nil,                              // 25: api.agent.v1.RegisterRequest.LabelsEntry
	nil,                              // 26: api.agent.v1.FetchJobRequest.LabelsEntry
	nil,                              // 27: api.agent.v1.Job.EnvEntry
	nil,                              // 28: api.agent.v1.Job.SecretsEntry
	nil,                              // 29: api.agent.v1.ReportJobStatusRequest.MetricsEntry
	nil,                              // 30: api.agent.v1.UpdateLabelsRequest.LabelsEntry
	nil,                              // 31: api.agent.v1.UpdateLabelsResponse.LabelsEntry
	nil,                              // 32: api.agent.v1.LabelSelector.MatchLabelsEntry
	(v1.JobStatus)(0),                // 33: api.job.v1.JobStatus
}
var file_api_agent_v1_proto_agent_proto_depIdxs = []int32{
	0,  // 0: api.agent.v1.HeartbeatRequest.status:type_name -> api.agent.v1.AgentStatus
	23, // 1: api.agent.v1.HeartbeatRequest.metrics:type_name -> api.agent.v1.HeartbeatRequest.MetricsEntry
	24, // 2: api.agent.v1.HeartbeatRequest.labels:type_name -> api.agent.v1.HeartbeatRequest.LabelsEntry
	25, // 3: api.agent.v1.RegisterRequest.labels:type_name -> api.agent.v1.RegisterRequest.LabelsEntry
	26, // 4: api.agent.v1.FetchJobRequest.labels:type_name -> api.agent.v1.FetchJobRequest.LabelsEntry
	10, // 5: api.agent.v1.FetchJobResponse.jobs:type_name -> api.agent.v1.Job
	27, // 6: api.agent.v1.Job.env:type_name -> api.agent.v1.Job.EnvEntry
	28, // 7: api.agent.v1.Job.secrets:type_name -> api.agent.v1.Job.SecretsEntry
	11, // 8: api.agent.v1.Job.artifacts:type_name -> api.agent.v1.Artifact
	21, // 9: api.agent.v1.Job.label_selector:type_name -> api.agent.v1.LabelSelector
	33, // 10: api.agent.v1.ReportJobStatusRequest.status:type_name -> api.job.v1.JobStatus
	29, // 11: api.agent.v1.ReportJobStatusRequest.metrics:type_name -> api.agent.v1.ReportJobStatusRequest.MetricsEntry
	15, // 12: api.agent.v1.ReportJobLogRequest.logs:type_name -> api.agent.v1.LogEntry
	30, // 13: api.agent.v1.UpdateLabelsRequest.labels:type_name -> api.agent.v1.UpdateLabelsRequest.LabelsEntry
	31, // 14: api.agent.v1.UpdateLabelsResponse.labels:type_name -> api.agent.v1.UpdateLabelsResponse.LabelsEntry
	32, // 15: api.agent.v1.LabelSelector.match_labels:type_name -> api.agent.v1.LabelSelector.MatchLabelsEntry
	22, // 16: api.agent.v1.LabelSelector.match_expressions:type_name -> api.agent.v1.LabelSelectorRequirement
	1,  // 17: api.agent.v1.LabelSelectorRequirement.operator:type_name -> api.agent.v1.LabelOperator
	2,  // 18: api.agent.v1.Agent.Heartbeat:input_type -> api.agent.v1.HeartbeatRequest
	4,  // 19: api.agent.v1.Agent.Register:input_type -> api.agent.v1.RegisterRequest
	6,  // 20: api.agent.v1.Agent.Unregister:input_type -> api.agent.v1.UnregisterRequest
	8,  // 21: api.agent.v1.Agent.FetchJob:input_type -> api.agent.v1.FetchJobRequest
	12, // 22: api.agent.v1.Agent.ReportJobStatus:input_type -> api.agent.v1.ReportJobStatusRequest
	14, // 23: api.agent.v1.Agent.ReportJobLog:input_type -> api.agent.v1.ReportJobLogRequest
	17, // 24: api.agent.v1.Agent.CancelJob:input_type -> api.agent.v1.CancelJobRequest
	19, // 25: api.agent.v1.Agent.UpdateLabels:input_type -> api.agent.v1.UpdateLabelsRequest
	3,  // 26: api.agent.v1.Agent.Heartbeat:output_type -> api.agent.v1.HeartbeatResponse
	5,  // 27: api.agent.v1.Agent.Register:output_type -> api.agent.v1.RegisterResponse
	7,  // 28: api.agent.v1.Agent.Unregister:output_type -> api.agent.v1.UnregisterResponse
	9,  // 29: api.agent.v1.Agent.FetchJob:output_type -> api.agent.v1.FetchJobResponse
	13, // 30: api.agent.v1.Agent.ReportJobStatus:output_type -> api.agent.v1.ReportJobStatusResponse
	16, // 31: api.agent.v1.Agent.ReportJobLog:output_type -> api.agent.v1.ReportJobLogResponse
	18, // 32: api.agent.v1.Agent.CancelJob:output_type -> api.agent.v1.CancelJobResponse
	20, // 33: api.agent.v1.Agent.UpdateLabels:output_type -> api.agent.v1.UpdateLabelsResponse
	26, // [26:34] is the sub-list for method output_type
	18, // [18:26] is the sub-list for method input_type
	18, // [18:18] is the sub-list for extension type_name
	18, // [18:18] is the sub-list for extension extendee
	0,  // [0:18] is the sub-list for field type_name
}

func init() { file_api_agent_v1_proto_agent_proto_init() }
func file_api_agent_v1_proto_agent_proto_init() {
	if File_api_agent_v1_proto_agent_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_agent_v1_proto_agent_proto_rawDesc), len(file_api_agent_v1_proto_agent_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   31,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_agent_v1_proto_agent_proto_goTypes,
		DependencyIndexes: file_api_agent_v1_proto_agent_proto_depIdxs,
		EnumInfos:         file_api_agent_v1_proto_agent_proto_enumTypes,
		MessageInfos:      file_api_agent_v1_proto_agent_proto_msgTypes,
	}.Build()
	File_api_agent_v1_proto_agent_proto = out.File
	file_api_agent_v1_proto_agent_proto_goTypes = nil
	file_api_agent_v1_proto_agent_proto_depIdxs = nil
}
