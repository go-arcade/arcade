// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/stream/v1/proto/stream.proto

package v1

import (
	v1 "github.com/observabil/arcade/api/job/v1"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Agent状态枚举
type AgentStatus int32

const (
	AgentStatus_AGENT_STATUS_UNKNOWN AgentStatus = 0
	AgentStatus_AGENT_STATUS_ONLINE  AgentStatus = 1 // 在线
	AgentStatus_AGENT_STATUS_OFFLINE AgentStatus = 2 // 离线
	AgentStatus_AGENT_STATUS_BUSY    AgentStatus = 3 // 忙碌
	AgentStatus_AGENT_STATUS_IDLE    AgentStatus = 4 // 空闲
)

// Enum value maps for AgentStatus.
var (
	AgentStatus_name = map[int32]string{
		0: "AGENT_STATUS_UNKNOWN",
		1: "AGENT_STATUS_ONLINE",
		2: "AGENT_STATUS_OFFLINE",
		3: "AGENT_STATUS_BUSY",
		4: "AGENT_STATUS_IDLE",
	}
	AgentStatus_value = map[string]int32{
		"AGENT_STATUS_UNKNOWN": 0,
		"AGENT_STATUS_ONLINE":  1,
		"AGENT_STATUS_OFFLINE": 2,
		"AGENT_STATUS_BUSY":    3,
		"AGENT_STATUS_IDLE":    4,
	}
)

func (x AgentStatus) Enum() *AgentStatus {
	p := new(AgentStatus)
	*p = x
	return p
}

func (x AgentStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (AgentStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_stream_v1_proto_stream_proto_enumTypes[0].Descriptor()
}

func (AgentStatus) Type() protoreflect.EnumType {
	return &file_api_stream_v1_proto_stream_proto_enumTypes[0]
}

func (x AgentStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use AgentStatus.Descriptor instead.
func (AgentStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{0}
}

// 事件类型枚举
type EventType int32

const (
	EventType_EVENT_TYPE_UNKNOWN            EventType = 0
	EventType_EVENT_TYPE_JOB_CREATED        EventType = 1  // 任务创建
	EventType_EVENT_TYPE_JOB_STARTED        EventType = 2  // 任务开始
	EventType_EVENT_TYPE_JOB_COMPLETED      EventType = 3  // 任务完成
	EventType_EVENT_TYPE_JOB_FAILED         EventType = 4  // 任务失败
	EventType_EVENT_TYPE_JOB_CANCELLED      EventType = 5  // 任务取消
	EventType_EVENT_TYPE_PIPELINE_STARTED   EventType = 6  // 流水线开始
	EventType_EVENT_TYPE_PIPELINE_COMPLETED EventType = 7  // 流水线完成
	EventType_EVENT_TYPE_PIPELINE_FAILED    EventType = 8  // 流水线失败
	EventType_EVENT_TYPE_AGENT_REGISTERED   EventType = 9  // Agent注册
	EventType_EVENT_TYPE_AGENT_UNREGISTERED EventType = 10 // Agent注销
	EventType_EVENT_TYPE_AGENT_OFFLINE      EventType = 11 // Agent离线
)

// Enum value maps for EventType.
var (
	EventType_name = map[int32]string{
		0:  "EVENT_TYPE_UNKNOWN",
		1:  "EVENT_TYPE_JOB_CREATED",
		2:  "EVENT_TYPE_JOB_STARTED",
		3:  "EVENT_TYPE_JOB_COMPLETED",
		4:  "EVENT_TYPE_JOB_FAILED",
		5:  "EVENT_TYPE_JOB_CANCELLED",
		6:  "EVENT_TYPE_PIPELINE_STARTED",
		7:  "EVENT_TYPE_PIPELINE_COMPLETED",
		8:  "EVENT_TYPE_PIPELINE_FAILED",
		9:  "EVENT_TYPE_AGENT_REGISTERED",
		10: "EVENT_TYPE_AGENT_UNREGISTERED",
		11: "EVENT_TYPE_AGENT_OFFLINE",
	}
	EventType_value = map[string]int32{
		"EVENT_TYPE_UNKNOWN":            0,
		"EVENT_TYPE_JOB_CREATED":        1,
		"EVENT_TYPE_JOB_STARTED":        2,
		"EVENT_TYPE_JOB_COMPLETED":      3,
		"EVENT_TYPE_JOB_FAILED":         4,
		"EVENT_TYPE_JOB_CANCELLED":      5,
		"EVENT_TYPE_PIPELINE_STARTED":   6,
		"EVENT_TYPE_PIPELINE_COMPLETED": 7,
		"EVENT_TYPE_PIPELINE_FAILED":    8,
		"EVENT_TYPE_AGENT_REGISTERED":   9,
		"EVENT_TYPE_AGENT_UNREGISTERED": 10,
		"EVENT_TYPE_AGENT_OFFLINE":      11,
	}
)

func (x EventType) Enum() *EventType {
	p := new(EventType)
	*p = x
	return p
}

func (x EventType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (EventType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_stream_v1_proto_stream_proto_enumTypes[1].Descriptor()
}

func (EventType) Type() protoreflect.EnumType {
	return &file_api_stream_v1_proto_stream_proto_enumTypes[1]
}

func (x EventType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use EventType.Descriptor instead.
func (EventType) EnumDescriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{1}
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 实时获取任务日志流请求
type StreamJobLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`           // 任务ID
	FromLine      int32                  `protobuf:"varint,2,opt,name=from_line,json=fromLine,proto3" json:"from_line,omitempty"` // 从第几行开始（0表示从头开始）
	Follow        bool                   `protobuf:"varint,3,opt,name=follow,proto3" json:"follow,omitempty"`                     // 是否持续跟踪（类似tail -f）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamJobLogRequest) Reset() {
	*x = StreamJobLogRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamJobLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamJobLogRequest) ProtoMessage() {}

func (x *StreamJobLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamJobLogRequest.ProtoReflect.Descriptor instead.
func (*StreamJobLogRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{2}
}

func (x *StreamJobLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *StreamJobLogRequest) GetFromLine() int32 {
	if x != nil {
		return x.FromLine
	}
	return 0
}

func (x *StreamJobLogRequest) GetFollow() bool {
	if x != nil {
		return x.Follow
	}
	return false
}

// 实时获取任务日志流响应
type StreamJobLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	LogChunk      *LogChunk              `protobuf:"bytes,2,opt,name=log_chunk,json=logChunk,proto3" json:"log_chunk,omitempty"`        // 日志块
	IsComplete    bool                   `protobuf:"varint,3,opt,name=is_complete,json=isComplete,proto3" json:"is_complete,omitempty"` // 日志是否已完整传输
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamJobLogResponse) Reset() {
	*x = StreamJobLogResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamJobLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamJobLogResponse) ProtoMessage() {}

func (x *StreamJobLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamJobLogResponse.ProtoReflect.Descriptor instead.
func (*StreamJobLogResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{3}
}

func (x *StreamJobLogResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *StreamJobLogResponse) GetLogChunk() *LogChunk {
	if x != nil {
		return x.LogChunk
	}
	return nil
}

func (x *StreamJobLogResponse) GetIsComplete() bool {
	if x != nil {
		return x.IsComplete
	}
	return false
}

// 日志块
type LogChunk struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Timestamp     int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                     // 时间戳（毫秒）
	LineNumber    int32                  `protobuf:"varint,2,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"` // 行号
	Level         string                 `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`                              // 日志级别（info、warn、error、debug）
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                          // 日志内容
	Stream        string                 `protobuf:"bytes,5,opt,name=stream,proto3" json:"stream,omitempty"`                            // 流类型（stdout、stderr）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogChunk) Reset() {
	*x = LogChunk{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogChunk) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogChunk) ProtoMessage() {}

func (x *LogChunk) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogChunk.ProtoReflect.Descriptor instead.
func (*LogChunk) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{4}
}

func (x *LogChunk) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogChunk) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *LogChunk) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogChunk) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *LogChunk) GetStream() string {
	if x != nil {
		return x.Stream
	}
	return ""
}

// 上报任务日志流请求
type UploadJobLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	AgentId       string                 `protobuf:"bytes,2,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Logs          []*LogChunk            `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"` // 日志块列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadJobLogRequest) Reset() {
	*x = UploadJobLogRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadJobLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadJobLogRequest) ProtoMessage() {}

func (x *UploadJobLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadJobLogRequest.ProtoReflect.Descriptor instead.
func (*UploadJobLogRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{5}
}

func (x *UploadJobLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UploadJobLogRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *UploadJobLogRequest) GetLogs() []*LogChunk {
	if x != nil {
		return x.Logs
	}
	return nil
}

// 上报任务日志流响应
type UploadJobLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	ReceivedLines int32                  `protobuf:"varint,3,opt,name=received_lines,json=receivedLines,proto3" json:"received_lines,omitempty"` // 已接收的日志行数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UploadJobLogResponse) Reset() {
	*x = UploadJobLogResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UploadJobLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UploadJobLogResponse) ProtoMessage() {}

func (x *UploadJobLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UploadJobLogResponse.ProtoReflect.Descriptor instead.
func (*UploadJobLogResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{6}
}

func (x *UploadJobLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UploadJobLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *UploadJobLogResponse) GetReceivedLines() int32 {
	if x != nil {
		return x.ReceivedLines
	}
	return 0
}

// 实时获取任务状态流请求
type StreamJobStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobIds        []string               `protobuf:"bytes,1,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"`             // 任务ID列表（为空则监控所有任务）
	PipelineId    string                 `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"` // 流水线ID（可选，监控特定流水线的所有任务）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamJobStatusRequest) Reset() {
	*x = StreamJobStatusRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamJobStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamJobStatusRequest) ProtoMessage() {}

func (x *StreamJobStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamJobStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamJobStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{7}
}

func (x *StreamJobStatusRequest) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

func (x *StreamJobStatusRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

// 实时获取任务状态流响应
type StreamJobStatusResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	JobId          string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	JobName        string                 `protobuf:"bytes,2,opt,name=job_name,json=jobName,proto3" json:"job_name,omitempty"`
	Status         v1.JobStatus           `protobuf:"varint,3,opt,name=status,proto3,enum=api.job.v1.JobStatus" json:"status,omitempty"`                                                   // 任务状态
	PreviousStatus v1.JobStatus           `protobuf:"varint,4,opt,name=previous_status,json=previousStatus,proto3,enum=api.job.v1.JobStatus" json:"previous_status,omitempty"`             // 之前的状态
	Timestamp      int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                       // 状态变化时间戳
	AgentId        string                 `protobuf:"bytes,6,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                             // 执行的Agent ID
	ExitCode       int32                  `protobuf:"varint,7,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                                                         // 退出码
	ErrorMessage   string                 `protobuf:"bytes,8,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                              // 错误信息
	Duration       int64                  `protobuf:"varint,9,opt,name=duration,proto3" json:"duration,omitempty"`                                                                         // 执行时长（毫秒）
	Metrics        map[string]string      `protobuf:"bytes,10,rep,name=metrics,proto3" json:"metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 执行指标
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamJobStatusResponse) Reset() {
	*x = StreamJobStatusResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamJobStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamJobStatusResponse) ProtoMessage() {}

func (x *StreamJobStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamJobStatusResponse.ProtoReflect.Descriptor instead.
func (*StreamJobStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{8}
}

func (x *StreamJobStatusResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *StreamJobStatusResponse) GetJobName() string {
	if x != nil {
		return x.JobName
	}
	return ""
}

func (x *StreamJobStatusResponse) GetStatus() v1.JobStatus {
	if x != nil {
		return x.Status
	}
	return v1.JobStatus(0)
}

func (x *StreamJobStatusResponse) GetPreviousStatus() v1.JobStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return v1.JobStatus(0)
}

func (x *StreamJobStatusResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamJobStatusResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *StreamJobStatusResponse) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *StreamJobStatusResponse) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *StreamJobStatusResponse) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *StreamJobStatusResponse) GetMetrics() map[string]string {
	if x != nil {
		return x.Metrics
	}
	return nil
}

// 实时获取流水线状态流请求
type StreamPipelineStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineIds   []string               `protobuf:"bytes,1,rep,name=pipeline_ids,json=pipelineIds,proto3" json:"pipeline_ids,omitempty"` // 流水线ID列表（为空则监控所有流水线）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamPipelineStatusRequest) Reset() {
	*x = StreamPipelineStatusRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamPipelineStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPipelineStatusRequest) ProtoMessage() {}

func (x *StreamPipelineStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPipelineStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamPipelineStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{9}
}

func (x *StreamPipelineStatusRequest) GetPipelineIds() []string {
	if x != nil {
		return x.PipelineIds
	}
	return nil
}

// 实时获取流水线状态流响应
type StreamPipelineStatusResponse struct {
	state          protoimpl.MessageState `protogen:"open.v1"`
	PipelineId     string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId          string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"` // 流水线执行ID
	PipelineName   string                 `protobuf:"bytes,3,opt,name=pipeline_name,json=pipelineName,proto3" json:"pipeline_name,omitempty"`
	Status         v1.PipelineStatus      `protobuf:"varint,4,opt,name=status,proto3,enum=api.job.v1.PipelineStatus" json:"status,omitempty"`                                       // 流水线状态
	PreviousStatus v1.PipelineStatus      `protobuf:"varint,5,opt,name=previous_status,json=previousStatus,proto3,enum=api.job.v1.PipelineStatus" json:"previous_status,omitempty"` // 之前的状态
	Timestamp      int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                // 状态变化时间戳
	TotalJobs      int32                  `protobuf:"varint,7,opt,name=total_jobs,json=totalJobs,proto3" json:"total_jobs,omitempty"`                                               // 总任务数
	CompletedJobs  int32                  `protobuf:"varint,8,opt,name=completed_jobs,json=completedJobs,proto3" json:"completed_jobs,omitempty"`                                   // 已完成任务数
	FailedJobs     int32                  `protobuf:"varint,9,opt,name=failed_jobs,json=failedJobs,proto3" json:"failed_jobs,omitempty"`                                            // 失败任务数
	RunningJobs    int32                  `protobuf:"varint,10,opt,name=running_jobs,json=runningJobs,proto3" json:"running_jobs,omitempty"`                                        // 运行中任务数
	CurrentStage   int32                  `protobuf:"varint,11,opt,name=current_stage,json=currentStage,proto3" json:"current_stage,omitempty"`                                     // 当前阶段
	TotalStages    int32                  `protobuf:"varint,12,opt,name=total_stages,json=totalStages,proto3" json:"total_stages,omitempty"`                                        // 总阶段数
	Duration       int64                  `protobuf:"varint,13,opt,name=duration,proto3" json:"duration,omitempty"`                                                                 // 执行时长（毫秒）
	unknownFields  protoimpl.UnknownFields
	sizeCache      protoimpl.SizeCache
}

func (x *StreamPipelineStatusResponse) Reset() {
	*x = StreamPipelineStatusResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamPipelineStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamPipelineStatusResponse) ProtoMessage() {}

func (x *StreamPipelineStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamPipelineStatusResponse.ProtoReflect.Descriptor instead.
func (*StreamPipelineStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{10}
}

func (x *StreamPipelineStatusResponse) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *StreamPipelineStatusResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *StreamPipelineStatusResponse) GetPipelineName() string {
	if x != nil {
		return x.PipelineName
	}
	return ""
}

func (x *StreamPipelineStatusResponse) GetStatus() v1.PipelineStatus {
	if x != nil {
		return x.Status
	}
	return v1.PipelineStatus(0)
}

func (x *StreamPipelineStatusResponse) GetPreviousStatus() v1.PipelineStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return v1.PipelineStatus(0)
}

func (x *StreamPipelineStatusResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetTotalJobs() int32 {
	if x != nil {
		return x.TotalJobs
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetCompletedJobs() int32 {
	if x != nil {
		return x.CompletedJobs
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetFailedJobs() int32 {
	if x != nil {
		return x.FailedJobs
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetRunningJobs() int32 {
	if x != nil {
		return x.RunningJobs
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetCurrentStage() int32 {
	if x != nil {
		return x.CurrentStage
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetTotalStages() int32 {
	if x != nil {
		return x.TotalStages
	}
	return 0
}

func (x *StreamPipelineStatusResponse) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

// Agent通道请求（双向流）
type AgentChannelRequest struct {
	state     protoimpl.MessageState `protogen:"open.v1"`
	AgentId   string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	RequestId string                 `protobuf:"bytes,2,opt,name=request_id,json=requestId,proto3" json:"request_id,omitempty"` // 请求ID（用于匹配请求和响应）
	// Types that are valid to be assigned to Payload:
	//
	//	*AgentChannelRequest_Heartbeat
	//	*AgentChannelRequest_JobStatus
	//	*AgentChannelRequest_LogData
	//	*AgentChannelRequest_JobFetch
	//	*AgentChannelRequest_Metrics
	Payload       isAgentChannelRequest_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentChannelRequest) Reset() {
	*x = AgentChannelRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentChannelRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChannelRequest) ProtoMessage() {}

func (x *AgentChannelRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChannelRequest.ProtoReflect.Descriptor instead.
func (*AgentChannelRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{11}
}

func (x *AgentChannelRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentChannelRequest) GetRequestId() string {
	if x != nil {
		return x.RequestId
	}
	return ""
}

func (x *AgentChannelRequest) GetPayload() isAgentChannelRequest_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AgentChannelRequest) GetHeartbeat() *HeartbeatData {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelRequest_Heartbeat); ok {
			return x.Heartbeat
		}
	}
	return nil
}

func (x *AgentChannelRequest) GetJobStatus() *JobStatusUpdate {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelRequest_JobStatus); ok {
			return x.JobStatus
		}
	}
	return nil
}

func (x *AgentChannelRequest) GetLogData() *LogData {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelRequest_LogData); ok {
			return x.LogData
		}
	}
	return nil
}

func (x *AgentChannelRequest) GetJobFetch() *JobFetchRequest {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelRequest_JobFetch); ok {
			return x.JobFetch
		}
	}
	return nil
}

func (x *AgentChannelRequest) GetMetrics() *AgentMetrics {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelRequest_Metrics); ok {
			return x.Metrics
		}
	}
	return nil
}

type isAgentChannelRequest_Payload interface {
	isAgentChannelRequest_Payload()
}

type AgentChannelRequest_Heartbeat struct {
	Heartbeat *HeartbeatData `protobuf:"bytes,3,opt,name=heartbeat,proto3,oneof"` // 心跳数据
}

type AgentChannelRequest_JobStatus struct {
	JobStatus *JobStatusUpdate `protobuf:"bytes,4,opt,name=job_status,json=jobStatus,proto3,oneof"` // 任务状态更新
}

type AgentChannelRequest_LogData struct {
	LogData *LogData `protobuf:"bytes,5,opt,name=log_data,json=logData,proto3,oneof"` // 日志数据
}

type AgentChannelRequest_JobFetch struct {
	JobFetch *JobFetchRequest `protobuf:"bytes,6,opt,name=job_fetch,json=jobFetch,proto3,oneof"` // 获取任务请求
}

type AgentChannelRequest_Metrics struct {
	Metrics *AgentMetrics `protobuf:"bytes,7,opt,name=metrics,proto3,oneof"` // Agent指标
}

func (*AgentChannelRequest_Heartbeat) isAgentChannelRequest_Payload() {}

func (*AgentChannelRequest_JobStatus) isAgentChannelRequest_Payload() {}

func (*AgentChannelRequest_LogData) isAgentChannelRequest_Payload() {}

func (*AgentChannelRequest_JobFetch) isAgentChannelRequest_Payload() {}

func (*AgentChannelRequest_Metrics) isAgentChannelRequest_Payload() {}

// 心跳数据
type HeartbeatData struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	Timestamp         int64                  `protobuf:"varint,1,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Status            AgentStatus            `protobuf:"varint,2,opt,name=status,proto3,enum=api.stream.v1.AgentStatus" json:"status,omitempty"`
	RunningJobsCount  int32                  `protobuf:"varint,3,opt,name=running_jobs_count,json=runningJobsCount,proto3" json:"running_jobs_count,omitempty"`
	MaxConcurrentJobs int32                  `protobuf:"varint,4,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *HeartbeatData) Reset() {
	*x = HeartbeatData{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatData) ProtoMessage() {}

func (x *HeartbeatData) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatData.ProtoReflect.Descriptor instead.
func (*HeartbeatData) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{12}
}

func (x *HeartbeatData) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *HeartbeatData) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

func (x *HeartbeatData) GetRunningJobsCount() int32 {
	if x != nil {
		return x.RunningJobsCount
	}
	return 0
}

func (x *HeartbeatData) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

// 任务状态更新
type JobStatusUpdate struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Status        v1.JobStatus           `protobuf:"varint,2,opt,name=status,proto3,enum=api.job.v1.JobStatus" json:"status,omitempty"`
	ExitCode      int32                  `protobuf:"varint,3,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`
	ErrorMessage  string                 `protobuf:"bytes,4,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobStatusUpdate) Reset() {
	*x = JobStatusUpdate{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobStatusUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobStatusUpdate) ProtoMessage() {}

func (x *JobStatusUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobStatusUpdate.ProtoReflect.Descriptor instead.
func (*JobStatusUpdate) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{13}
}

func (x *JobStatusUpdate) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobStatusUpdate) GetStatus() v1.JobStatus {
	if x != nil {
		return x.Status
	}
	return v1.JobStatus(0)
}

func (x *JobStatusUpdate) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *JobStatusUpdate) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *JobStatusUpdate) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 日志数据
type LogData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Logs          []*LogChunk            `protobuf:"bytes,2,rep,name=logs,proto3" json:"logs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogData) Reset() {
	*x = LogData{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogData) ProtoMessage() {}

func (x *LogData) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogData.ProtoReflect.Descriptor instead.
func (*LogData) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{14}
}

func (x *LogData) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *LogData) GetLogs() []*LogChunk {
	if x != nil {
		return x.Logs
	}
	return nil
}

// 获取任务请求
type JobFetchRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	MaxJobs       int32                  `protobuf:"varint,1,opt,name=max_jobs,json=maxJobs,proto3" json:"max_jobs,omitempty"`
	Tags          []string               `protobuf:"bytes,2,rep,name=tags,proto3" json:"tags,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobFetchRequest) Reset() {
	*x = JobFetchRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobFetchRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobFetchRequest) ProtoMessage() {}

func (x *JobFetchRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobFetchRequest.ProtoReflect.Descriptor instead.
func (*JobFetchRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{15}
}

func (x *JobFetchRequest) GetMaxJobs() int32 {
	if x != nil {
		return x.MaxJobs
	}
	return 0
}

func (x *JobFetchRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// Agent指标
type AgentMetrics struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	CpuUsage      float64                `protobuf:"fixed64,1,opt,name=cpu_usage,json=cpuUsage,proto3" json:"cpu_usage,omitempty"`                                                                                        // CPU使用率（百分比）
	MemoryUsage   float64                `protobuf:"fixed64,2,opt,name=memory_usage,json=memoryUsage,proto3" json:"memory_usage,omitempty"`                                                                               // 内存使用率（百分比）
	DiskUsage     float64                `protobuf:"fixed64,3,opt,name=disk_usage,json=diskUsage,proto3" json:"disk_usage,omitempty"`                                                                                     // 磁盘使用率（百分比）
	RunningJobs   int32                  `protobuf:"varint,4,opt,name=running_jobs,json=runningJobs,proto3" json:"running_jobs,omitempty"`                                                                                // 运行中的任务数
	CustomMetrics map[string]string      `protobuf:"bytes,5,rep,name=custom_metrics,json=customMetrics,proto3" json:"custom_metrics,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 自定义指标
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentMetrics) Reset() {
	*x = AgentMetrics{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentMetrics) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentMetrics) ProtoMessage() {}

func (x *AgentMetrics) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentMetrics.ProtoReflect.Descriptor instead.
func (*AgentMetrics) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{16}
}

func (x *AgentMetrics) GetCpuUsage() float64 {
	if x != nil {
		return x.CpuUsage
	}
	return 0
}

func (x *AgentMetrics) GetMemoryUsage() float64 {
	if x != nil {
		return x.MemoryUsage
	}
	return 0
}

func (x *AgentMetrics) GetDiskUsage() float64 {
	if x != nil {
		return x.DiskUsage
	}
	return 0
}

func (x *AgentMetrics) GetRunningJobs() int32 {
	if x != nil {
		return x.RunningJobs
	}
	return 0
}

func (x *AgentMetrics) GetCustomMetrics() map[string]string {
	if x != nil {
		return x.CustomMetrics
	}
	return nil
}

// Agent通道响应（双向流）
type AgentChannelResponse struct {
	state      protoimpl.MessageState `protogen:"open.v1"`
	AgentId    string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	ResponseId string                 `protobuf:"bytes,2,opt,name=response_id,json=responseId,proto3" json:"response_id,omitempty"` // 响应ID（对应请求ID）
	// Types that are valid to be assigned to Payload:
	//
	//	*AgentChannelResponse_HeartbeatAck
	//	*AgentChannelResponse_JobAssignment
	//	*AgentChannelResponse_CancelCommand
	//	*AgentChannelResponse_ConfigUpdate
	Payload       isAgentChannelResponse_Payload `protobuf_oneof:"payload"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AgentChannelResponse) Reset() {
	*x = AgentChannelResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AgentChannelResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AgentChannelResponse) ProtoMessage() {}

func (x *AgentChannelResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AgentChannelResponse.ProtoReflect.Descriptor instead.
func (*AgentChannelResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{17}
}

func (x *AgentChannelResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *AgentChannelResponse) GetResponseId() string {
	if x != nil {
		return x.ResponseId
	}
	return ""
}

func (x *AgentChannelResponse) GetPayload() isAgentChannelResponse_Payload {
	if x != nil {
		return x.Payload
	}
	return nil
}

func (x *AgentChannelResponse) GetHeartbeatAck() *HeartbeatAck {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelResponse_HeartbeatAck); ok {
			return x.HeartbeatAck
		}
	}
	return nil
}

func (x *AgentChannelResponse) GetJobAssignment() *JobAssignment {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelResponse_JobAssignment); ok {
			return x.JobAssignment
		}
	}
	return nil
}

func (x *AgentChannelResponse) GetCancelCommand() *JobCancelCommand {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelResponse_CancelCommand); ok {
			return x.CancelCommand
		}
	}
	return nil
}

func (x *AgentChannelResponse) GetConfigUpdate() *ConfigUpdate {
	if x != nil {
		if x, ok := x.Payload.(*AgentChannelResponse_ConfigUpdate); ok {
			return x.ConfigUpdate
		}
	}
	return nil
}

type isAgentChannelResponse_Payload interface {
	isAgentChannelResponse_Payload()
}

type AgentChannelResponse_HeartbeatAck struct {
	HeartbeatAck *HeartbeatAck `protobuf:"bytes,3,opt,name=heartbeat_ack,json=heartbeatAck,proto3,oneof"` // 心跳确认
}

type AgentChannelResponse_JobAssignment struct {
	JobAssignment *JobAssignment `protobuf:"bytes,4,opt,name=job_assignment,json=jobAssignment,proto3,oneof"` // 任务分配
}

type AgentChannelResponse_CancelCommand struct {
	CancelCommand *JobCancelCommand `protobuf:"bytes,5,opt,name=cancel_command,json=cancelCommand,proto3,oneof"` // 取消任务命令
}

type AgentChannelResponse_ConfigUpdate struct {
	ConfigUpdate *ConfigUpdate `protobuf:"bytes,6,opt,name=config_update,json=configUpdate,proto3,oneof"` // 配置更新
}

func (*AgentChannelResponse_HeartbeatAck) isAgentChannelResponse_Payload() {}

func (*AgentChannelResponse_JobAssignment) isAgentChannelResponse_Payload() {}

func (*AgentChannelResponse_CancelCommand) isAgentChannelResponse_Payload() {}

func (*AgentChannelResponse_ConfigUpdate) isAgentChannelResponse_Payload() {}

// 心跳确认
type HeartbeatAck struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ServerTime    int64                  `protobuf:"varint,1,opt,name=server_time,json=serverTime,proto3" json:"server_time,omitempty"`
	Success       bool                   `protobuf:"varint,2,opt,name=success,proto3" json:"success,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *HeartbeatAck) Reset() {
	*x = HeartbeatAck{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *HeartbeatAck) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*HeartbeatAck) ProtoMessage() {}

func (x *HeartbeatAck) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use HeartbeatAck.ProtoReflect.Descriptor instead.
func (*HeartbeatAck) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{18}
}

func (x *HeartbeatAck) GetServerTime() int64 {
	if x != nil {
		return x.ServerTime
	}
	return 0
}

func (x *HeartbeatAck) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// 任务分配
type JobAssignment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Jobs          []*JobInfo             `protobuf:"bytes,1,rep,name=jobs,proto3" json:"jobs,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobAssignment) Reset() {
	*x = JobAssignment{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobAssignment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobAssignment) ProtoMessage() {}

func (x *JobAssignment) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobAssignment.ProtoReflect.Descriptor instead.
func (*JobAssignment) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{19}
}

func (x *JobAssignment) GetJobs() []*JobInfo {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// 任务信息
type JobInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	PipelineId    string                 `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Stage         int32                  `protobuf:"varint,4,opt,name=stage,proto3" json:"stage,omitempty"`
	Commands      []string               `protobuf:"bytes,5,rep,name=commands,proto3" json:"commands,omitempty"`
	Env           map[string]string      `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	Workspace     string                 `protobuf:"bytes,7,opt,name=workspace,proto3" json:"workspace,omitempty"`
	Timeout       int32                  `protobuf:"varint,8,opt,name=timeout,proto3" json:"timeout,omitempty"`
	Tags          []string               `protobuf:"bytes,9,rep,name=tags,proto3" json:"tags,omitempty"`
	Image         string                 `protobuf:"bytes,10,opt,name=image,proto3" json:"image,omitempty"`
	Secrets       map[string]string      `protobuf:"bytes,11,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobInfo) Reset() {
	*x = JobInfo{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobInfo) ProtoMessage() {}

func (x *JobInfo) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobInfo.ProtoReflect.Descriptor instead.
func (*JobInfo) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{20}
}

func (x *JobInfo) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobInfo) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *JobInfo) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *JobInfo) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *JobInfo) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *JobInfo) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *JobInfo) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *JobInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *JobInfo) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *JobInfo) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

// 取消任务命令
type JobCancelCommand struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobCancelCommand) Reset() {
	*x = JobCancelCommand{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobCancelCommand) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobCancelCommand) ProtoMessage() {}

func (x *JobCancelCommand) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobCancelCommand.ProtoReflect.Descriptor instead.
func (*JobCancelCommand) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{21}
}

func (x *JobCancelCommand) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobCancelCommand) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 配置更新
type ConfigUpdate struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	HeartbeatInterval int64                  `protobuf:"varint,1,opt,name=heartbeat_interval,json=heartbeatInterval,proto3" json:"heartbeat_interval,omitempty"`                           // 心跳间隔
	MaxConcurrentJobs int32                  `protobuf:"varint,2,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`                         // 最大并发任务数
	Config            map[string]string      `protobuf:"bytes,3,rep,name=config,proto3" json:"config,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 其他配置
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *ConfigUpdate) Reset() {
	*x = ConfigUpdate{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ConfigUpdate) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ConfigUpdate) ProtoMessage() {}

func (x *ConfigUpdate) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ConfigUpdate.ProtoReflect.Descriptor instead.
func (*ConfigUpdate) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{22}
}

func (x *ConfigUpdate) GetHeartbeatInterval() int64 {
	if x != nil {
		return x.HeartbeatInterval
	}
	return 0
}

func (x *ConfigUpdate) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

func (x *ConfigUpdate) GetConfig() map[string]string {
	if x != nil {
		return x.Config
	}
	return nil
}

// 实时监控Agent状态流请求
type StreamAgentStatusRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	AgentIds      []string               `protobuf:"bytes,1,rep,name=agent_ids,json=agentIds,proto3" json:"agent_ids,omitempty"` // Agent ID列表（为空则监控所有Agent）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamAgentStatusRequest) Reset() {
	*x = StreamAgentStatusRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAgentStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAgentStatusRequest) ProtoMessage() {}

func (x *StreamAgentStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAgentStatusRequest.ProtoReflect.Descriptor instead.
func (*StreamAgentStatusRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{23}
}

func (x *StreamAgentStatusRequest) GetAgentIds() []string {
	if x != nil {
		return x.AgentIds
	}
	return nil
}

// 实时监控Agent状态流响应
type StreamAgentStatusResponse struct {
	state             protoimpl.MessageState `protogen:"open.v1"`
	AgentId           string                 `protobuf:"bytes,1,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`
	Hostname          string                 `protobuf:"bytes,2,opt,name=hostname,proto3" json:"hostname,omitempty"`
	Ip                string                 `protobuf:"bytes,3,opt,name=ip,proto3" json:"ip,omitempty"`
	Status            AgentStatus            `protobuf:"varint,4,opt,name=status,proto3,enum=api.stream.v1.AgentStatus" json:"status,omitempty"`                                            // Agent状态
	PreviousStatus    AgentStatus            `protobuf:"varint,5,opt,name=previous_status,json=previousStatus,proto3,enum=api.stream.v1.AgentStatus" json:"previous_status,omitempty"`      // 之前的状态
	Timestamp         int64                  `protobuf:"varint,6,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                     // 状态变化时间戳
	RunningJobsCount  int32                  `protobuf:"varint,7,opt,name=running_jobs_count,json=runningJobsCount,proto3" json:"running_jobs_count,omitempty"`                             // 运行中的任务数
	MaxConcurrentJobs int32                  `protobuf:"varint,8,opt,name=max_concurrent_jobs,json=maxConcurrentJobs,proto3" json:"max_concurrent_jobs,omitempty"`                          // 最大并发任务数
	Metrics           *AgentMetrics          `protobuf:"bytes,9,opt,name=metrics,proto3" json:"metrics,omitempty"`                                                                          // Agent指标
	LastHeartbeat     int64                  `protobuf:"varint,10,opt,name=last_heartbeat,json=lastHeartbeat,proto3" json:"last_heartbeat,omitempty"`                                       // 最后心跳时间
	Labels            map[string]string      `protobuf:"bytes,11,rep,name=labels,proto3" json:"labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // Agent标签
	unknownFields     protoimpl.UnknownFields
	sizeCache         protoimpl.SizeCache
}

func (x *StreamAgentStatusResponse) Reset() {
	*x = StreamAgentStatusResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamAgentStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamAgentStatusResponse) ProtoMessage() {}

func (x *StreamAgentStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamAgentStatusResponse.ProtoReflect.Descriptor instead.
func (*StreamAgentStatusResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{24}
}

func (x *StreamAgentStatusResponse) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *StreamAgentStatusResponse) GetHostname() string {
	if x != nil {
		return x.Hostname
	}
	return ""
}

func (x *StreamAgentStatusResponse) GetIp() string {
	if x != nil {
		return x.Ip
	}
	return ""
}

func (x *StreamAgentStatusResponse) GetStatus() AgentStatus {
	if x != nil {
		return x.Status
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

func (x *StreamAgentStatusResponse) GetPreviousStatus() AgentStatus {
	if x != nil {
		return x.PreviousStatus
	}
	return AgentStatus_AGENT_STATUS_UNKNOWN
}

func (x *StreamAgentStatusResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamAgentStatusResponse) GetRunningJobsCount() int32 {
	if x != nil {
		return x.RunningJobsCount
	}
	return 0
}

func (x *StreamAgentStatusResponse) GetMaxConcurrentJobs() int32 {
	if x != nil {
		return x.MaxConcurrentJobs
	}
	return 0
}

func (x *StreamAgentStatusResponse) GetMetrics() *AgentMetrics {
	if x != nil {
		return x.Metrics
	}
	return nil
}

func (x *StreamAgentStatusResponse) GetLastHeartbeat() int64 {
	if x != nil {
		return x.LastHeartbeat
	}
	return 0
}

func (x *StreamAgentStatusResponse) GetLabels() map[string]string {
	if x != nil {
		return x.Labels
	}
	return nil
}

// 实时事件流请求
type StreamEventsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventTypes    []EventType            `protobuf:"varint,1,rep,packed,name=event_types,json=eventTypes,proto3,enum=api.stream.v1.EventType" json:"event_types,omitempty"` // 关注的事件类型（为空则接收所有事件）
	ResourceIds   []string               `protobuf:"bytes,2,rep,name=resource_ids,json=resourceIds,proto3" json:"resource_ids,omitempty"`                                   // 关注的资源ID（job_id、pipeline_id等）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsRequest) Reset() {
	*x = StreamEventsRequest{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsRequest) ProtoMessage() {}

func (x *StreamEventsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsRequest.ProtoReflect.Descriptor instead.
func (*StreamEventsRequest) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{25}
}

func (x *StreamEventsRequest) GetEventTypes() []EventType {
	if x != nil {
		return x.EventTypes
	}
	return nil
}

func (x *StreamEventsRequest) GetResourceIds() []string {
	if x != nil {
		return x.ResourceIds
	}
	return nil
}

// 实时事件流响应
type StreamEventsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	EventId       string                 `protobuf:"bytes,1,opt,name=event_id,json=eventId,proto3" json:"event_id,omitempty"`                                                              // 事件ID
	EventType     EventType              `protobuf:"varint,2,opt,name=event_type,json=eventType,proto3,enum=api.stream.v1.EventType" json:"event_type,omitempty"`                          // 事件类型
	Timestamp     int64                  `protobuf:"varint,3,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                                                                        // 事件时间戳
	ResourceId    string                 `protobuf:"bytes,4,opt,name=resource_id,json=resourceId,proto3" json:"resource_id,omitempty"`                                                     // 资源ID
	ResourceType  string                 `protobuf:"bytes,5,opt,name=resource_type,json=resourceType,proto3" json:"resource_type,omitempty"`                                               // 资源类型（job、pipeline、agent等）
	Title         string                 `protobuf:"bytes,6,opt,name=title,proto3" json:"title,omitempty"`                                                                                 // 事件标题
	Description   string                 `protobuf:"bytes,7,opt,name=description,proto3" json:"description,omitempty"`                                                                     // 事件描述
	Metadata      map[string]string      `protobuf:"bytes,8,rep,name=metadata,proto3" json:"metadata,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 事件元数据
	UserId        string                 `protobuf:"bytes,9,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                                                                 // 触发事件的用户ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamEventsResponse) Reset() {
	*x = StreamEventsResponse{}
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamEventsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamEventsResponse) ProtoMessage() {}

func (x *StreamEventsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_stream_v1_proto_stream_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamEventsResponse.ProtoReflect.Descriptor instead.
func (*StreamEventsResponse) Descriptor() ([]byte, []int) {
	return file_api_stream_v1_proto_stream_proto_rawDescGZIP(), []int{26}
}

func (x *StreamEventsResponse) GetEventId() string {
	if x != nil {
		return x.EventId
	}
	return ""
}

func (x *StreamEventsResponse) GetEventType() EventType {
	if x != nil {
		return x.EventType
	}
	return EventType_EVENT_TYPE_UNKNOWN
}

func (x *StreamEventsResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *StreamEventsResponse) GetResourceId() string {
	if x != nil {
		return x.ResourceId
	}
	return ""
}

func (x *StreamEventsResponse) GetResourceType() string {
	if x != nil {
		return x.ResourceType
	}
	return ""
}

func (x *StreamEventsResponse) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *StreamEventsResponse) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *StreamEventsResponse) GetMetadata() map[string]string {
	if x != nil {
		return x.Metadata
	}
	return nil
}

func (x *StreamEventsResponse) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

var File_api_stream_v1_proto_stream_proto protoreflect.FileDescriptor

const file_api_stream_v1_proto_stream_proto_rawDesc = "" +
	"\n" +
	" api/stream/v1/proto/stream.proto\x12\rapi.stream.v1\x1a\x1aapi/job/v1/proto/job.proto\"'\n" +
	"\vPingRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"F\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"a\n" +
	"\x13StreamJobLogRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x1b\n" +
	"\tfrom_line\x18\x02 \x01(\x05R\bfromLine\x12\x16\n" +
	"\x06follow\x18\x03 \x01(\bR\x06follow\"\x84\x01\n" +
	"\x14StreamJobLogResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x124\n" +
	"\tlog_chunk\x18\x02 \x01(\v2\x17.api.stream.v1.LogChunkR\blogChunk\x12\x1f\n" +
	"\vis_complete\x18\x03 \x01(\bR\n" +
	"isComplete\"\x91\x01\n" +
	"\bLogChunk\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\vline_number\x18\x02 \x01(\x05R\n" +
	"lineNumber\x12\x14\n" +
	"\x05level\x18\x03 \x01(\tR\x05level\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\x12\x16\n" +
	"\x06stream\x18\x05 \x01(\tR\x06stream\"t\n" +
	"\x13UploadJobLogRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x19\n" +
	"\bagent_id\x18\x02 \x01(\tR\aagentId\x12+\n" +
	"\x04logs\x18\x03 \x03(\v2\x17.api.stream.v1.LogChunkR\x04logs\"q\n" +
	"\x14UploadJobLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12%\n" +
	"\x0ereceived_lines\x18\x03 \x01(\x05R\rreceivedLines\"R\n" +
	"\x16StreamJobStatusRequest\x12\x17\n" +
	"\ajob_ids\x18\x01 \x03(\tR\x06jobIds\x12\x1f\n" +
	"\vpipeline_id\x18\x02 \x01(\tR\n" +
	"pipelineId\"\xdc\x03\n" +
	"\x17StreamJobStatusResponse\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x19\n" +
	"\bjob_name\x18\x02 \x01(\tR\ajobName\x12-\n" +
	"\x06status\x18\x03 \x01(\x0e2\x15.api.job.v1.JobStatusR\x06status\x12>\n" +
	"\x0fprevious_status\x18\x04 \x01(\x0e2\x15.api.job.v1.JobStatusR\x0epreviousStatus\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\x12\x19\n" +
	"\bagent_id\x18\x06 \x01(\tR\aagentId\x12\x1b\n" +
	"\texit_code\x18\a \x01(\x05R\bexitCode\x12#\n" +
	"\rerror_message\x18\b \x01(\tR\ferrorMessage\x12\x1a\n" +
	"\bduration\x18\t \x01(\x03R\bduration\x12M\n" +
	"\ametrics\x18\n" +
	" \x03(\v23.api.stream.v1.StreamJobStatusResponse.MetricsEntryR\ametrics\x1a:\n" +
	"\fMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"@\n" +
	"\x1bStreamPipelineStatusRequest\x12!\n" +
	"\fpipeline_ids\x18\x01 \x03(\tR\vpipelineIds\"\x80\x04\n" +
	"\x1cStreamPipelineStatusResponse\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\x12#\n" +
	"\rpipeline_name\x18\x03 \x01(\tR\fpipelineName\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.api.job.v1.PipelineStatusR\x06status\x12C\n" +
	"\x0fprevious_status\x18\x05 \x01(\x0e2\x1a.api.job.v1.PipelineStatusR\x0epreviousStatus\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12\x1d\n" +
	"\n" +
	"total_jobs\x18\a \x01(\x05R\ttotalJobs\x12%\n" +
	"\x0ecompleted_jobs\x18\b \x01(\x05R\rcompletedJobs\x12\x1f\n" +
	"\vfailed_jobs\x18\t \x01(\x05R\n" +
	"failedJobs\x12!\n" +
	"\frunning_jobs\x18\n" +
	" \x01(\x05R\vrunningJobs\x12#\n" +
	"\rcurrent_stage\x18\v \x01(\x05R\fcurrentStage\x12!\n" +
	"\ftotal_stages\x18\f \x01(\x05R\vtotalStages\x12\x1a\n" +
	"\bduration\x18\r \x01(\x03R\bduration\"\x86\x03\n" +
	"\x13AgentChannelRequest\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1d\n" +
	"\n" +
	"request_id\x18\x02 \x01(\tR\trequestId\x12<\n" +
	"\theartbeat\x18\x03 \x01(\v2\x1c.api.stream.v1.HeartbeatDataH\x00R\theartbeat\x12?\n" +
	"\n" +
	"job_status\x18\x04 \x01(\v2\x1e.api.stream.v1.JobStatusUpdateH\x00R\tjobStatus\x123\n" +
	"\blog_data\x18\x05 \x01(\v2\x16.api.stream.v1.LogDataH\x00R\alogData\x12=\n" +
	"\tjob_fetch\x18\x06 \x01(\v2\x1e.api.stream.v1.JobFetchRequestH\x00R\bjobFetch\x127\n" +
	"\ametrics\x18\a \x01(\v2\x1b.api.stream.v1.AgentMetricsH\x00R\ametricsB\t\n" +
	"\apayload\"\xbf\x01\n" +
	"\rHeartbeatData\x12\x1c\n" +
	"\ttimestamp\x18\x01 \x01(\x03R\ttimestamp\x122\n" +
	"\x06status\x18\x02 \x01(\x0e2\x1a.api.stream.v1.AgentStatusR\x06status\x12,\n" +
	"\x12running_jobs_count\x18\x03 \x01(\x05R\x10runningJobsCount\x12.\n" +
	"\x13max_concurrent_jobs\x18\x04 \x01(\x05R\x11maxConcurrentJobs\"\xb7\x01\n" +
	"\x0fJobStatusUpdate\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12-\n" +
	"\x06status\x18\x02 \x01(\x0e2\x15.api.job.v1.JobStatusR\x06status\x12\x1b\n" +
	"\texit_code\x18\x03 \x01(\x05R\bexitCode\x12#\n" +
	"\rerror_message\x18\x04 \x01(\tR\ferrorMessage\x12\x1c\n" +
	"\ttimestamp\x18\x05 \x01(\x03R\ttimestamp\"M\n" +
	"\aLogData\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12+\n" +
	"\x04logs\x18\x02 \x03(\v2\x17.api.stream.v1.LogChunkR\x04logs\"@\n" +
	"\x0fJobFetchRequest\x12\x19\n" +
	"\bmax_jobs\x18\x01 \x01(\x05R\amaxJobs\x12\x12\n" +
	"\x04tags\x18\x02 \x03(\tR\x04tags\"\xa9\x02\n" +
	"\fAgentMetrics\x12\x1b\n" +
	"\tcpu_usage\x18\x01 \x01(\x01R\bcpuUsage\x12!\n" +
	"\fmemory_usage\x18\x02 \x01(\x01R\vmemoryUsage\x12\x1d\n" +
	"\n" +
	"disk_usage\x18\x03 \x01(\x01R\tdiskUsage\x12!\n" +
	"\frunning_jobs\x18\x04 \x01(\x05R\vrunningJobs\x12U\n" +
	"\x0ecustom_metrics\x18\x05 \x03(\v2..api.stream.v1.AgentMetrics.CustomMetricsEntryR\rcustomMetrics\x1a@\n" +
	"\x12CustomMetricsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xf6\x02\n" +
	"\x14AgentChannelResponse\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1f\n" +
	"\vresponse_id\x18\x02 \x01(\tR\n" +
	"responseId\x12B\n" +
	"\rheartbeat_ack\x18\x03 \x01(\v2\x1b.api.stream.v1.HeartbeatAckH\x00R\fheartbeatAck\x12E\n" +
	"\x0ejob_assignment\x18\x04 \x01(\v2\x1c.api.stream.v1.JobAssignmentH\x00R\rjobAssignment\x12H\n" +
	"\x0ecancel_command\x18\x05 \x01(\v2\x1f.api.stream.v1.JobCancelCommandH\x00R\rcancelCommand\x12B\n" +
	"\rconfig_update\x18\x06 \x01(\v2\x1b.api.stream.v1.ConfigUpdateH\x00R\fconfigUpdateB\t\n" +
	"\apayload\"I\n" +
	"\fHeartbeatAck\x12\x1f\n" +
	"\vserver_time\x18\x01 \x01(\x03R\n" +
	"serverTime\x12\x18\n" +
	"\asuccess\x18\x02 \x01(\bR\asuccess\";\n" +
	"\rJobAssignment\x12*\n" +
	"\x04jobs\x18\x01 \x03(\v2\x16.api.stream.v1.JobInfoR\x04jobs\"\xcf\x03\n" +
	"\aJobInfo\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vpipeline_id\x18\x03 \x01(\tR\n" +
	"pipelineId\x12\x14\n" +
	"\x05stage\x18\x04 \x01(\x05R\x05stage\x12\x1a\n" +
	"\bcommands\x18\x05 \x03(\tR\bcommands\x121\n" +
	"\x03env\x18\x06 \x03(\v2\x1f.api.stream.v1.JobInfo.EnvEntryR\x03env\x12\x1c\n" +
	"\tworkspace\x18\a \x01(\tR\tworkspace\x12\x18\n" +
	"\atimeout\x18\b \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\t \x03(\tR\x04tags\x12\x14\n" +
	"\x05image\x18\n" +
	" \x01(\tR\x05image\x12=\n" +
	"\asecrets\x18\v \x03(\v2#.api.stream.v1.JobInfo.SecretsEntryR\asecrets\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fSecretsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"A\n" +
	"\x10JobCancelCommand\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"\xe9\x01\n" +
	"\fConfigUpdate\x12-\n" +
	"\x12heartbeat_interval\x18\x01 \x01(\x03R\x11heartbeatInterval\x12.\n" +
	"\x13max_concurrent_jobs\x18\x02 \x01(\x05R\x11maxConcurrentJobs\x12?\n" +
	"\x06config\x18\x03 \x03(\v2'.api.stream.v1.ConfigUpdate.ConfigEntryR\x06config\x1a9\n" +
	"\vConfigEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"7\n" +
	"\x18StreamAgentStatusRequest\x12\x1b\n" +
	"\tagent_ids\x18\x01 \x03(\tR\bagentIds\"\xbe\x04\n" +
	"\x19StreamAgentStatusResponse\x12\x19\n" +
	"\bagent_id\x18\x01 \x01(\tR\aagentId\x12\x1a\n" +
	"\bhostname\x18\x02 \x01(\tR\bhostname\x12\x0e\n" +
	"\x02ip\x18\x03 \x01(\tR\x02ip\x122\n" +
	"\x06status\x18\x04 \x01(\x0e2\x1a.api.stream.v1.AgentStatusR\x06status\x12C\n" +
	"\x0fprevious_status\x18\x05 \x01(\x0e2\x1a.api.stream.v1.AgentStatusR\x0epreviousStatus\x12\x1c\n" +
	"\ttimestamp\x18\x06 \x01(\x03R\ttimestamp\x12,\n" +
	"\x12running_jobs_count\x18\a \x01(\x05R\x10runningJobsCount\x12.\n" +
	"\x13max_concurrent_jobs\x18\b \x01(\x05R\x11maxConcurrentJobs\x125\n" +
	"\ametrics\x18\t \x01(\v2\x1b.api.stream.v1.AgentMetricsR\ametrics\x12%\n" +
	"\x0elast_heartbeat\x18\n" +
	" \x01(\x03R\rlastHeartbeat\x12L\n" +
	"\x06labels\x18\v \x03(\v24.api.stream.v1.StreamAgentStatusResponse.LabelsEntryR\x06labels\x1a9\n" +
	"\vLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"s\n" +
	"\x13StreamEventsRequest\x129\n" +
	"\vevent_types\x18\x01 \x03(\x0e2\x18.api.stream.v1.EventTypeR\n" +
	"eventTypes\x12!\n" +
	"\fresource_ids\x18\x02 \x03(\tR\vresourceIds\"\xab\x03\n" +
	"\x14StreamEventsResponse\x12\x19\n" +
	"\bevent_id\x18\x01 \x01(\tR\aeventId\x127\n" +
	"\n" +
	"event_type\x18\x02 \x01(\x0e2\x18.api.stream.v1.EventTypeR\teventType\x12\x1c\n" +
	"\ttimestamp\x18\x03 \x01(\x03R\ttimestamp\x12\x1f\n" +
	"\vresource_id\x18\x04 \x01(\tR\n" +
	"resourceId\x12#\n" +
	"\rresource_type\x18\x05 \x01(\tR\fresourceType\x12\x14\n" +
	"\x05title\x18\x06 \x01(\tR\x05title\x12 \n" +
	"\vdescription\x18\a \x01(\tR\vdescription\x12M\n" +
	"\bmetadata\x18\b \x03(\v21.api.stream.v1.StreamEventsResponse.MetadataEntryR\bmetadata\x12\x17\n" +
	"\auser_id\x18\t \x01(\tR\x06userId\x1a;\n" +
	"\rMetadataEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01*\x88\x01\n" +
	"\vAgentStatus\x12\x18\n" +
	"\x14AGENT_STATUS_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13AGENT_STATUS_ONLINE\x10\x01\x12\x18\n" +
	"\x14AGENT_STATUS_OFFLINE\x10\x02\x12\x15\n" +
	"\x11AGENT_STATUS_BUSY\x10\x03\x12\x15\n" +
	"\x11AGENT_STATUS_IDLE\x10\x04*\xf8\x02\n" +
	"\tEventType\x12\x16\n" +
	"\x12EVENT_TYPE_UNKNOWN\x10\x00\x12\x1a\n" +
	"\x16EVENT_TYPE_JOB_CREATED\x10\x01\x12\x1a\n" +
	"\x16EVENT_TYPE_JOB_STARTED\x10\x02\x12\x1c\n" +
	"\x18EVENT_TYPE_JOB_COMPLETED\x10\x03\x12\x19\n" +
	"\x15EVENT_TYPE_JOB_FAILED\x10\x04\x12\x1c\n" +
	"\x18EVENT_TYPE_JOB_CANCELLED\x10\x05\x12\x1f\n" +
	"\x1bEVENT_TYPE_PIPELINE_STARTED\x10\x06\x12!\n" +
	"\x1dEVENT_TYPE_PIPELINE_COMPLETED\x10\a\x12\x1e\n" +
	"\x1aEVENT_TYPE_PIPELINE_FAILED\x10\b\x12\x1f\n" +
	"\x1bEVENT_TYPE_AGENT_REGISTERED\x10\t\x12!\n" +
	"\x1dEVENT_TYPE_AGENT_UNREGISTERED\x10\n" +
	"\x12\x1c\n" +
	"\x18EVENT_TYPE_AGENT_OFFLINE\x10\v2\x88\x06\n" +
	"\x06Stream\x12A\n" +
	"\x04Ping\x12\x1a.api.stream.v1.PingRequest\x1a\x1b.api.stream.v1.PingResponse\"\x00\x12[\n" +
	"\fStreamJobLog\x12\".api.stream.v1.StreamJobLogRequest\x1a#.api.stream.v1.StreamJobLogResponse\"\x000\x01\x12[\n" +
	"\fUploadJobLog\x12\".api.stream.v1.UploadJobLogRequest\x1a#.api.stream.v1.UploadJobLogResponse\"\x00(\x01\x12d\n" +
	"\x0fStreamJobStatus\x12%.api.stream.v1.StreamJobStatusRequest\x1a&.api.stream.v1.StreamJobStatusResponse\"\x000\x01\x12s\n" +
	"\x14StreamPipelineStatus\x12*.api.stream.v1.StreamPipelineStatusRequest\x1a+.api.stream.v1.StreamPipelineStatusResponse\"\x000\x01\x12]\n" +
	"\fAgentChannel\x12\".api.stream.v1.AgentChannelRequest\x1a#.api.stream.v1.AgentChannelResponse\"\x00(\x010\x01\x12j\n" +
	"\x11StreamAgentStatus\x12'.api.stream.v1.StreamAgentStatusRequest\x1a(.api.stream.v1.StreamAgentStatusResponse\"\x000\x01\x12[\n" +
	"\fStreamEvents\x12\".api.stream.v1.StreamEventsRequest\x1a#.api.stream.v1.StreamEventsResponse\"\x000\x01B/Z-github.com/observabil/arcade/api/stream/v1;v1b\x06proto3"

var (
	file_api_stream_v1_proto_stream_proto_rawDescOnce sync.Once
	file_api_stream_v1_proto_stream_proto_rawDescData []byte
)

func file_api_stream_v1_proto_stream_proto_rawDescGZIP() []byte {
	file_api_stream_v1_proto_stream_proto_rawDescOnce.Do(func() {
		file_api_stream_v1_proto_stream_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_stream_v1_proto_stream_proto_rawDesc), len(file_api_stream_v1_proto_stream_proto_rawDesc)))
	})
	return file_api_stream_v1_proto_stream_proto_rawDescData
}

var file_api_stream_v1_proto_stream_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_api_stream_v1_proto_stream_proto_msgTypes = make([]protoimpl.MessageInfo, 34)
var file_api_stream_v1_proto_stream_proto_goTypes = []any{
	(AgentStatus)(0),                     // 0: api.stream.v1.AgentStatus
	(EventType)(0),                       // 1: api.stream.v1.EventType
	(*PingRequest)(nil),                  // 2: api.stream.v1.PingRequest
	(*PingResponse)(nil),                 // 3: api.stream.v1.PingResponse
	(*StreamJobLogRequest)(nil),          // 4: api.stream.v1.StreamJobLogRequest
	(*StreamJobLogResponse)(nil),         // 5: api.stream.v1.StreamJobLogResponse
	(*LogChunk)(nil),                     // 6: api.stream.v1.LogChunk
	(*UploadJobLogRequest)(nil),          // 7: api.stream.v1.UploadJobLogRequest
	(*UploadJobLogResponse)(nil),         // 8: api.stream.v1.UploadJobLogResponse
	(*StreamJobStatusRequest)(nil),       // 9: api.stream.v1.StreamJobStatusRequest
	(*StreamJobStatusResponse)(nil),      // 10: api.stream.v1.StreamJobStatusResponse
	(*StreamPipelineStatusRequest)(nil),  // 11: api.stream.v1.StreamPipelineStatusRequest
	(*StreamPipelineStatusResponse)(nil), // 12: api.stream.v1.StreamPipelineStatusResponse
	(*AgentChannelRequest)(nil),          // 13: api.stream.v1.AgentChannelRequest
	(*HeartbeatData)(nil),                // 14: api.stream.v1.HeartbeatData
	(*JobStatusUpdate)(nil),              // 15: api.stream.v1.JobStatusUpdate
	(*LogData)(nil),                      // 16: api.stream.v1.LogData
	(*JobFetchRequest)(nil),              // 17: api.stream.v1.JobFetchRequest
	(*AgentMetrics)(nil),                 // 18: api.stream.v1.AgentMetrics
	(*AgentChannelResponse)(nil),         // 19: api.stream.v1.AgentChannelResponse
	(*HeartbeatAck)(nil),                 // 20: api.stream.v1.HeartbeatAck
	(*JobAssignment)(nil),                // 21: api.stream.v1.JobAssignment
	(*JobInfo)(nil),                      // 22: api.stream.v1.JobInfo
	(*JobCancelCommand)(nil),             // 23: api.stream.v1.JobCancelCommand
	(*ConfigUpdate)(nil),                 // 24: api.stream.v1.ConfigUpdate
	(*StreamAgentStatusRequest)(nil),     // 25: api.stream.v1.StreamAgentStatusRequest
	(*StreamAgentStatusResponse)(nil),    // 26: api.stream.v1.StreamAgentStatusResponse
	(*StreamEventsRequest)(nil),          // 27: api.stream.v1.StreamEventsRequest
	(*StreamEventsResponse)(nil),         // 28: api.stream.v1.StreamEventsResponse
	nil,                                  // 29: api.stream.v1.StreamJobStatusResponse.MetricsEntry
	nil,                                  // 30: api.stream.v1.AgentMetrics.CustomMetricsEntry
	nil,                                  // 31: api.stream.v1.JobInfo.EnvEntry
	nil,                                  // 32: api.stream.v1.JobInfo.SecretsEntry
	nil,                                  // 33: api.stream.v1.ConfigUpdate.ConfigEntry
	nil,                                  // 34: api.stream.v1.StreamAgentStatusResponse.LabelsEntry
	nil,                                  // 35: api.stream.v1.StreamEventsResponse.MetadataEntry
	(v1.JobStatus)(0),                    // 36: api.job.v1.JobStatus
	(v1.PipelineStatus)(0),               // 37: api.job.v1.PipelineStatus
}
var file_api_stream_v1_proto_stream_proto_depIdxs = []int32{
	6,  // 0: api.stream.v1.StreamJobLogResponse.log_chunk:type_name -> api.stream.v1.LogChunk
	6,  // 1: api.stream.v1.UploadJobLogRequest.logs:type_name -> api.stream.v1.LogChunk
	36, // 2: api.stream.v1.StreamJobStatusResponse.status:type_name -> api.job.v1.JobStatus
	36, // 3: api.stream.v1.StreamJobStatusResponse.previous_status:type_name -> api.job.v1.JobStatus
	29, // 4: api.stream.v1.StreamJobStatusResponse.metrics:type_name -> api.stream.v1.StreamJobStatusResponse.MetricsEntry
	37, // 5: api.stream.v1.StreamPipelineStatusResponse.status:type_name -> api.job.v1.PipelineStatus
	37, // 6: api.stream.v1.StreamPipelineStatusResponse.previous_status:type_name -> api.job.v1.PipelineStatus
	14, // 7: api.stream.v1.AgentChannelRequest.heartbeat:type_name -> api.stream.v1.HeartbeatData
	15, // 8: api.stream.v1.AgentChannelRequest.job_status:type_name -> api.stream.v1.JobStatusUpdate
	16, // 9: api.stream.v1.AgentChannelRequest.log_data:type_name -> api.stream.v1.LogData
	17, // 10: api.stream.v1.AgentChannelRequest.job_fetch:type_name -> api.stream.v1.JobFetchRequest
	18, // 11: api.stream.v1.AgentChannelRequest.metrics:type_name -> api.stream.v1.AgentMetrics
	0,  // 12: api.stream.v1.HeartbeatData.status:type_name -> api.stream.v1.AgentStatus
	36, // 13: api.stream.v1.JobStatusUpdate.status:type_name -> api.job.v1.JobStatus
	6,  // 14: api.stream.v1.LogData.logs:type_name -> api.stream.v1.LogChunk
	30, // 15: api.stream.v1.AgentMetrics.custom_metrics:type_name -> api.stream.v1.AgentMetrics.CustomMetricsEntry
	20, // 16: api.stream.v1.AgentChannelResponse.heartbeat_ack:type_name -> api.stream.v1.HeartbeatAck
	21, // 17: api.stream.v1.AgentChannelResponse.job_assignment:type_name -> api.stream.v1.JobAssignment
	23, // 18: api.stream.v1.AgentChannelResponse.cancel_command:type_name -> api.stream.v1.JobCancelCommand
	24, // 19: api.stream.v1.AgentChannelResponse.config_update:type_name -> api.stream.v1.ConfigUpdate
	22, // 20: api.stream.v1.JobAssignment.jobs:type_name -> api.stream.v1.JobInfo
	31, // 21: api.stream.v1.JobInfo.env:type_name -> api.stream.v1.JobInfo.EnvEntry
	32, // 22: api.stream.v1.JobInfo.secrets:type_name -> api.stream.v1.JobInfo.SecretsEntry
	33, // 23: api.stream.v1.ConfigUpdate.config:type_name -> api.stream.v1.ConfigUpdate.ConfigEntry
	0,  // 24: api.stream.v1.StreamAgentStatusResponse.status:type_name -> api.stream.v1.AgentStatus
	0,  // 25: api.stream.v1.StreamAgentStatusResponse.previous_status:type_name -> api.stream.v1.AgentStatus
	18, // 26: api.stream.v1.StreamAgentStatusResponse.metrics:type_name -> api.stream.v1.AgentMetrics
	34, // 27: api.stream.v1.StreamAgentStatusResponse.labels:type_name -> api.stream.v1.StreamAgentStatusResponse.LabelsEntry
	1,  // 28: api.stream.v1.StreamEventsRequest.event_types:type_name -> api.stream.v1.EventType
	1,  // 29: api.stream.v1.StreamEventsResponse.event_type:type_name -> api.stream.v1.EventType
	35, // 30: api.stream.v1.StreamEventsResponse.metadata:type_name -> api.stream.v1.StreamEventsResponse.MetadataEntry
	2,  // 31: api.stream.v1.Stream.Ping:input_type -> api.stream.v1.PingRequest
	4,  // 32: api.stream.v1.Stream.StreamJobLog:input_type -> api.stream.v1.StreamJobLogRequest
	7,  // 33: api.stream.v1.Stream.UploadJobLog:input_type -> api.stream.v1.UploadJobLogRequest
	9,  // 34: api.stream.v1.Stream.StreamJobStatus:input_type -> api.stream.v1.StreamJobStatusRequest
	11, // 35: api.stream.v1.Stream.StreamPipelineStatus:input_type -> api.stream.v1.StreamPipelineStatusRequest
	13, // 36: api.stream.v1.Stream.AgentChannel:input_type -> api.stream.v1.AgentChannelRequest
	25, // 37: api.stream.v1.Stream.StreamAgentStatus:input_type -> api.stream.v1.StreamAgentStatusRequest
	27, // 38: api.stream.v1.Stream.StreamEvents:input_type -> api.stream.v1.StreamEventsRequest
	3,  // 39: api.stream.v1.Stream.Ping:output_type -> api.stream.v1.PingResponse
	5,  // 40: api.stream.v1.Stream.StreamJobLog:output_type -> api.stream.v1.StreamJobLogResponse
	8,  // 41: api.stream.v1.Stream.UploadJobLog:output_type -> api.stream.v1.UploadJobLogResponse
	10, // 42: api.stream.v1.Stream.StreamJobStatus:output_type -> api.stream.v1.StreamJobStatusResponse
	12, // 43: api.stream.v1.Stream.StreamPipelineStatus:output_type -> api.stream.v1.StreamPipelineStatusResponse
	19, // 44: api.stream.v1.Stream.AgentChannel:output_type -> api.stream.v1.AgentChannelResponse
	26, // 45: api.stream.v1.Stream.StreamAgentStatus:output_type -> api.stream.v1.StreamAgentStatusResponse
	28, // 46: api.stream.v1.Stream.StreamEvents:output_type -> api.stream.v1.StreamEventsResponse
	39, // [39:47] is the sub-list for method output_type
	31, // [31:39] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_api_stream_v1_proto_stream_proto_init() }
func file_api_stream_v1_proto_stream_proto_init() {
	if File_api_stream_v1_proto_stream_proto != nil {
		return
	}
	file_api_stream_v1_proto_stream_proto_msgTypes[11].OneofWrappers = []any{
		(*AgentChannelRequest_Heartbeat)(nil),
		(*AgentChannelRequest_JobStatus)(nil),
		(*AgentChannelRequest_LogData)(nil),
		(*AgentChannelRequest_JobFetch)(nil),
		(*AgentChannelRequest_Metrics)(nil),
	}
	file_api_stream_v1_proto_stream_proto_msgTypes[17].OneofWrappers = []any{
		(*AgentChannelResponse_HeartbeatAck)(nil),
		(*AgentChannelResponse_JobAssignment)(nil),
		(*AgentChannelResponse_CancelCommand)(nil),
		(*AgentChannelResponse_ConfigUpdate)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_stream_v1_proto_stream_proto_rawDesc), len(file_api_stream_v1_proto_stream_proto_rawDesc)),
			NumEnums:      2,
			NumMessages:   34,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_stream_v1_proto_stream_proto_goTypes,
		DependencyIndexes: file_api_stream_v1_proto_stream_proto_depIdxs,
		EnumInfos:         file_api_stream_v1_proto_stream_proto_enumTypes,
		MessageInfos:      file_api_stream_v1_proto_stream_proto_msgTypes,
	}.Build()
	File_api_stream_v1_proto_stream_proto = out.File
	file_api_stream_v1_proto_stream_proto_goTypes = nil
	file_api_stream_v1_proto_stream_proto_depIdxs = nil
}
