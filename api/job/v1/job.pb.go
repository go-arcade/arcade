// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.10
// 	protoc        v6.32.1
// source: api/job/v1/proto/job.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 任务状态枚举
type JobStatus int32

const (
	JobStatus_JOB_STATUS_UNKNOWN   JobStatus = 0
	JobStatus_JOB_STATUS_PENDING   JobStatus = 1 // 等待执行
	JobStatus_JOB_STATUS_QUEUED    JobStatus = 2 // 已入队
	JobStatus_JOB_STATUS_RUNNING   JobStatus = 3 // 执行中
	JobStatus_JOB_STATUS_SUCCESS   JobStatus = 4 // 执行成功
	JobStatus_JOB_STATUS_FAILED    JobStatus = 5 // 执行失败
	JobStatus_JOB_STATUS_CANCELLED JobStatus = 6 // 已取消
	JobStatus_JOB_STATUS_TIMEOUT   JobStatus = 7 // 超时
	JobStatus_JOB_STATUS_SKIPPED   JobStatus = 8 // 已跳过
)

// Enum value maps for JobStatus.
var (
	JobStatus_name = map[int32]string{
		0: "JOB_STATUS_UNKNOWN",
		1: "JOB_STATUS_PENDING",
		2: "JOB_STATUS_QUEUED",
		3: "JOB_STATUS_RUNNING",
		4: "JOB_STATUS_SUCCESS",
		5: "JOB_STATUS_FAILED",
		6: "JOB_STATUS_CANCELLED",
		7: "JOB_STATUS_TIMEOUT",
		8: "JOB_STATUS_SKIPPED",
	}
	JobStatus_value = map[string]int32{
		"JOB_STATUS_UNKNOWN":   0,
		"JOB_STATUS_PENDING":   1,
		"JOB_STATUS_QUEUED":    2,
		"JOB_STATUS_RUNNING":   3,
		"JOB_STATUS_SUCCESS":   4,
		"JOB_STATUS_FAILED":    5,
		"JOB_STATUS_CANCELLED": 6,
		"JOB_STATUS_TIMEOUT":   7,
		"JOB_STATUS_SKIPPED":   8,
	}
)

func (x JobStatus) Enum() *JobStatus {
	p := new(JobStatus)
	*p = x
	return p
}

func (x JobStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (JobStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_job_v1_proto_job_proto_enumTypes[0].Descriptor()
}

func (JobStatus) Type() protoreflect.EnumType {
	return &file_api_job_v1_proto_job_proto_enumTypes[0]
}

func (x JobStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use JobStatus.Descriptor instead.
func (JobStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{0}
}

// 流水线状态枚举
type PipelineStatus int32

const (
	PipelineStatus_PIPELINE_STATUS_UNKNOWN   PipelineStatus = 0
	PipelineStatus_PIPELINE_STATUS_PENDING   PipelineStatus = 1 // 等待执行
	PipelineStatus_PIPELINE_STATUS_RUNNING   PipelineStatus = 2 // 执行中
	PipelineStatus_PIPELINE_STATUS_SUCCESS   PipelineStatus = 3 // 执行成功
	PipelineStatus_PIPELINE_STATUS_FAILED    PipelineStatus = 4 // 执行失败
	PipelineStatus_PIPELINE_STATUS_CANCELLED PipelineStatus = 5 // 已取消
	PipelineStatus_PIPELINE_STATUS_PARTIAL   PipelineStatus = 6 // 部分成功
)

// Enum value maps for PipelineStatus.
var (
	PipelineStatus_name = map[int32]string{
		0: "PIPELINE_STATUS_UNKNOWN",
		1: "PIPELINE_STATUS_PENDING",
		2: "PIPELINE_STATUS_RUNNING",
		3: "PIPELINE_STATUS_SUCCESS",
		4: "PIPELINE_STATUS_FAILED",
		5: "PIPELINE_STATUS_CANCELLED",
		6: "PIPELINE_STATUS_PARTIAL",
	}
	PipelineStatus_value = map[string]int32{
		"PIPELINE_STATUS_UNKNOWN":   0,
		"PIPELINE_STATUS_PENDING":   1,
		"PIPELINE_STATUS_RUNNING":   2,
		"PIPELINE_STATUS_SUCCESS":   3,
		"PIPELINE_STATUS_FAILED":    4,
		"PIPELINE_STATUS_CANCELLED": 5,
		"PIPELINE_STATUS_PARTIAL":   6,
	}
)

func (x PipelineStatus) Enum() *PipelineStatus {
	p := new(PipelineStatus)
	*p = x
	return p
}

func (x PipelineStatus) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (PipelineStatus) Descriptor() protoreflect.EnumDescriptor {
	return file_api_job_v1_proto_job_proto_enumTypes[1].Descriptor()
}

func (PipelineStatus) Type() protoreflect.EnumType {
	return &file_api_job_v1_proto_job_proto_enumTypes[1]
}

func (x PipelineStatus) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use PipelineStatus.Descriptor instead.
func (PipelineStatus) EnumDescriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{1}
}

// 触发类型枚举
type TriggerType int32

const (
	TriggerType_TRIGGER_TYPE_UNKNOWN  TriggerType = 0
	TriggerType_TRIGGER_TYPE_MANUAL   TriggerType = 1 // 手动触发
	TriggerType_TRIGGER_TYPE_WEBHOOK  TriggerType = 2 // Webhook触发
	TriggerType_TRIGGER_TYPE_SCHEDULE TriggerType = 3 // 定时触发
	TriggerType_TRIGGER_TYPE_API      TriggerType = 4 // API触发
)

// Enum value maps for TriggerType.
var (
	TriggerType_name = map[int32]string{
		0: "TRIGGER_TYPE_UNKNOWN",
		1: "TRIGGER_TYPE_MANUAL",
		2: "TRIGGER_TYPE_WEBHOOK",
		3: "TRIGGER_TYPE_SCHEDULE",
		4: "TRIGGER_TYPE_API",
	}
	TriggerType_value = map[string]int32{
		"TRIGGER_TYPE_UNKNOWN":  0,
		"TRIGGER_TYPE_MANUAL":   1,
		"TRIGGER_TYPE_WEBHOOK":  2,
		"TRIGGER_TYPE_SCHEDULE": 3,
		"TRIGGER_TYPE_API":      4,
	}
)

func (x TriggerType) Enum() *TriggerType {
	p := new(TriggerType)
	*p = x
	return p
}

func (x TriggerType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (TriggerType) Descriptor() protoreflect.EnumDescriptor {
	return file_api_job_v1_proto_job_proto_enumTypes[2].Descriptor()
}

func (TriggerType) Type() protoreflect.EnumType {
	return &file_api_job_v1_proto_job_proto_enumTypes[2]
}

func (x TriggerType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use TriggerType.Descriptor instead.
func (TriggerType) EnumDescriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{2}
}

// 标签操作符
type LabelOperator int32

const (
	LabelOperator_LABEL_OPERATOR_UNKNOWN    LabelOperator = 0
	LabelOperator_LABEL_OPERATOR_IN         LabelOperator = 1 // 标签值在values列表中
	LabelOperator_LABEL_OPERATOR_NOT_IN     LabelOperator = 2 // 标签值不在values列表中
	LabelOperator_LABEL_OPERATOR_EXISTS     LabelOperator = 3 // 标签key存在
	LabelOperator_LABEL_OPERATOR_NOT_EXISTS LabelOperator = 4 // 标签key不存在
	LabelOperator_LABEL_OPERATOR_GT         LabelOperator = 5 // 标签值大于指定值（用于数值比较）
	LabelOperator_LABEL_OPERATOR_LT         LabelOperator = 6 // 标签值小于指定值（用于数值比较）
)

// Enum value maps for LabelOperator.
var (
	LabelOperator_name = map[int32]string{
		0: "LABEL_OPERATOR_UNKNOWN",
		1: "LABEL_OPERATOR_IN",
		2: "LABEL_OPERATOR_NOT_IN",
		3: "LABEL_OPERATOR_EXISTS",
		4: "LABEL_OPERATOR_NOT_EXISTS",
		5: "LABEL_OPERATOR_GT",
		6: "LABEL_OPERATOR_LT",
	}
	LabelOperator_value = map[string]int32{
		"LABEL_OPERATOR_UNKNOWN":    0,
		"LABEL_OPERATOR_IN":         1,
		"LABEL_OPERATOR_NOT_IN":     2,
		"LABEL_OPERATOR_EXISTS":     3,
		"LABEL_OPERATOR_NOT_EXISTS": 4,
		"LABEL_OPERATOR_GT":         5,
		"LABEL_OPERATOR_LT":         6,
	}
)

func (x LabelOperator) Enum() *LabelOperator {
	p := new(LabelOperator)
	*p = x
	return p
}

func (x LabelOperator) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (LabelOperator) Descriptor() protoreflect.EnumDescriptor {
	return file_api_job_v1_proto_job_proto_enumTypes[3].Descriptor()
}

func (LabelOperator) Type() protoreflect.EnumType {
	return &file_api_job_v1_proto_job_proto_enumTypes[3]
}

func (x LabelOperator) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use LabelOperator.Descriptor instead.
func (LabelOperator) EnumDescriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{3}
}

type PingRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingRequest) Reset() {
	*x = PingRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingRequest) ProtoMessage() {}

func (x *PingRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingRequest.ProtoReflect.Descriptor instead.
func (*PingRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{0}
}

func (x *PingRequest) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

type PingResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Message       string                 `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PingResponse) Reset() {
	*x = PingResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PingResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PingResponse) ProtoMessage() {}

func (x *PingResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PingResponse.ProtoReflect.Descriptor instead.
func (*PingResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{1}
}

func (x *PingResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *PingResponse) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

// 创建任务请求
type CreateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                                  // 任务名称
	PipelineId    string                 `protobuf:"bytes,2,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`                                                    // 所属流水线ID
	Stage         int32                  `protobuf:"varint,3,opt,name=stage,proto3" json:"stage,omitempty"`                                                                               // 阶段序号
	Commands      []string               `protobuf:"bytes,4,rep,name=commands,proto3" json:"commands,omitempty"`                                                                          // 执行命令列表
	Env           map[string]string      `protobuf:"bytes,5,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`          // 环境变量
	Workspace     string                 `protobuf:"bytes,6,opt,name=workspace,proto3" json:"workspace,omitempty"`                                                                        // 工作目录
	Timeout       int32                  `protobuf:"varint,7,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                           // 超时时间（秒，默认3600）
	Tags          []string               `protobuf:"bytes,8,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                  // 任务标签（已废弃，建议使用label_selector）
	Image         string                 `protobuf:"bytes,9,opt,name=image,proto3" json:"image,omitempty"`                                                                                // Docker镜像
	Secrets       map[string]string      `protobuf:"bytes,10,rep,name=secrets,proto3" json:"secrets,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 密钥信息
	Artifacts     []*ArtifactConfig      `protobuf:"bytes,11,rep,name=artifacts,proto3" json:"artifacts,omitempty"`                                                                       // 产物配置
	DependsOn     []string               `protobuf:"bytes,12,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`                                                      // 依赖的任务ID列表
	AllowFailure  bool                   `protobuf:"varint,13,opt,name=allow_failure,json=allowFailure,proto3" json:"allow_failure,omitempty"`                                            // 是否允许失败
	RetryCount    int32                  `protobuf:"varint,14,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                                  // 重试次数
	LabelSelector *LabelSelector         `protobuf:"bytes,15,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`                                          // 标签选择器（用于匹配Agent）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobRequest) Reset() {
	*x = CreateJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobRequest) ProtoMessage() {}

func (x *CreateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobRequest.ProtoReflect.Descriptor instead.
func (*CreateJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{2}
}

func (x *CreateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateJobRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *CreateJobRequest) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *CreateJobRequest) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *CreateJobRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreateJobRequest) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *CreateJobRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *CreateJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *CreateJobRequest) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *CreateJobRequest) GetSecrets() map[string]string {
	if x != nil {
		return x.Secrets
	}
	return nil
}

func (x *CreateJobRequest) GetArtifacts() []*ArtifactConfig {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *CreateJobRequest) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *CreateJobRequest) GetAllowFailure() bool {
	if x != nil {
		return x.AllowFailure
	}
	return false
}

func (x *CreateJobRequest) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *CreateJobRequest) GetLabelSelector() *LabelSelector {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

// 产物配置
type ArtifactConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                // 产物名称
	Path          string                 `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                                // 产物路径（支持glob模式）
	Destination   string                 `protobuf:"bytes,3,opt,name=destination,proto3" json:"destination,omitempty"`                  // 目标存储路径
	Expire        bool                   `protobuf:"varint,4,opt,name=expire,proto3" json:"expire,omitempty"`                           // 是否过期
	ExpireDays    int64                  `protobuf:"varint,5,opt,name=expire_days,json=expireDays,proto3" json:"expire_days,omitempty"` // 过期天数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ArtifactConfig) Reset() {
	*x = ArtifactConfig{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ArtifactConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ArtifactConfig) ProtoMessage() {}

func (x *ArtifactConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ArtifactConfig.ProtoReflect.Descriptor instead.
func (*ArtifactConfig) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{3}
}

func (x *ArtifactConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ArtifactConfig) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ArtifactConfig) GetDestination() string {
	if x != nil {
		return x.Destination
	}
	return ""
}

func (x *ArtifactConfig) GetExpire() bool {
	if x != nil {
		return x.Expire
	}
	return false
}

func (x *ArtifactConfig) GetExpireDays() int64 {
	if x != nil {
		return x.ExpireDays
	}
	return 0
}

// 创建任务响应
type CreateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	JobId         string                 `protobuf:"bytes,3,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"` // 创建的任务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateJobResponse) Reset() {
	*x = CreateJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateJobResponse) ProtoMessage() {}

func (x *CreateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateJobResponse.ProtoReflect.Descriptor instead.
func (*CreateJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{4}
}

func (x *CreateJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreateJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreateJobResponse) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 获取任务请求
type GetJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobRequest) Reset() {
	*x = GetJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobRequest) ProtoMessage() {}

func (x *GetJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobRequest.ProtoReflect.Descriptor instead.
func (*GetJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{5}
}

func (x *GetJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 获取任务响应
type GetJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Job           *JobDetail             `protobuf:"bytes,3,opt,name=job,proto3" json:"job,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobResponse) Reset() {
	*x = GetJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobResponse) ProtoMessage() {}

func (x *GetJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobResponse.ProtoReflect.Descriptor instead.
func (*GetJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{6}
}

func (x *GetJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetJobResponse) GetJob() *JobDetail {
	if x != nil {
		return x.Job
	}
	return nil
}

// 任务详情
type JobDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`                                                                                              // 任务ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                                                             // 任务名称
	PipelineId    string                 `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`                                                                               // 所属流水线ID
	Stage         int32                  `protobuf:"varint,4,opt,name=stage,proto3" json:"stage,omitempty"`                                                                                                          // 阶段序号
	Status        JobStatus              `protobuf:"varint,5,opt,name=status,proto3,enum=api.job.v1.JobStatus" json:"status,omitempty"`                                                                              // 任务状态
	Commands      []string               `protobuf:"bytes,6,rep,name=commands,proto3" json:"commands,omitempty"`                                                                                                     // 执行命令列表
	Env           map[string]string      `protobuf:"bytes,7,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`                                     // 环境变量
	Workspace     string                 `protobuf:"bytes,8,opt,name=workspace,proto3" json:"workspace,omitempty"`                                                                                                   // 工作目录
	Timeout       int32                  `protobuf:"varint,9,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                                                      // 超时时间（秒）
	Tags          []string               `protobuf:"bytes,10,rep,name=tags,proto3" json:"tags,omitempty"`                                                                                                            // 任务标签（已废弃）
	Image         string                 `protobuf:"bytes,11,opt,name=image,proto3" json:"image,omitempty"`                                                                                                          // Docker镜像
	Artifacts     []*ArtifactConfig      `protobuf:"bytes,12,rep,name=artifacts,proto3" json:"artifacts,omitempty"`                                                                                                  // 产物配置
	DependsOn     []string               `protobuf:"bytes,13,rep,name=depends_on,json=dependsOn,proto3" json:"depends_on,omitempty"`                                                                                 // 依赖的任务ID列表
	AllowFailure  bool                   `protobuf:"varint,14,opt,name=allow_failure,json=allowFailure,proto3" json:"allow_failure,omitempty"`                                                                       // 是否允许失败
	RetryCount    int32                  `protobuf:"varint,15,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                                                             // 重试次数
	RetriedTimes  int32                  `protobuf:"varint,16,opt,name=retried_times,json=retriedTimes,proto3" json:"retried_times,omitempty"`                                                                       // 已重试次数
	AgentId       string                 `protobuf:"bytes,17,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`                                                                                       // 执行的Agent ID
	ExitCode      int32                  `protobuf:"varint,18,opt,name=exit_code,json=exitCode,proto3" json:"exit_code,omitempty"`                                                                                   // 退出码
	ErrorMessage  string                 `protobuf:"bytes,19,opt,name=error_message,json=errorMessage,proto3" json:"error_message,omitempty"`                                                                        // 错误信息
	CreatedAt     int64                  `protobuf:"varint,20,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                                                                // 创建时间
	StartedAt     int64                  `protobuf:"varint,21,opt,name=started_at,json=startedAt,proto3" json:"started_at,omitempty"`                                                                                // 开始时间
	FinishedAt    int64                  `protobuf:"varint,22,opt,name=finished_at,json=finishedAt,proto3" json:"finished_at,omitempty"`                                                                             // 结束时间
	Duration      int64                  `protobuf:"varint,23,opt,name=duration,proto3" json:"duration,omitempty"`                                                                                                   // 执行时长（毫秒）
	CreatedBy     string                 `protobuf:"bytes,24,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                                                                 // 创建者
	LabelSelector *LabelSelector         `protobuf:"bytes,25,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`                                                                     // 标签选择器
	AgentLabels   map[string]string      `protobuf:"bytes,26,rep,name=agent_labels,json=agentLabels,proto3" json:"agent_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 执行任务的Agent标签
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobDetail) Reset() {
	*x = JobDetail{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobDetail) ProtoMessage() {}

func (x *JobDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobDetail.ProtoReflect.Descriptor instead.
func (*JobDetail) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{7}
}

func (x *JobDetail) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *JobDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobDetail) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *JobDetail) GetStage() int32 {
	if x != nil {
		return x.Stage
	}
	return 0
}

func (x *JobDetail) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNKNOWN
}

func (x *JobDetail) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *JobDetail) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *JobDetail) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *JobDetail) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *JobDetail) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *JobDetail) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *JobDetail) GetArtifacts() []*ArtifactConfig {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *JobDetail) GetDependsOn() []string {
	if x != nil {
		return x.DependsOn
	}
	return nil
}

func (x *JobDetail) GetAllowFailure() bool {
	if x != nil {
		return x.AllowFailure
	}
	return false
}

func (x *JobDetail) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *JobDetail) GetRetriedTimes() int32 {
	if x != nil {
		return x.RetriedTimes
	}
	return 0
}

func (x *JobDetail) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *JobDetail) GetExitCode() int32 {
	if x != nil {
		return x.ExitCode
	}
	return 0
}

func (x *JobDetail) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *JobDetail) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *JobDetail) GetStartedAt() int64 {
	if x != nil {
		return x.StartedAt
	}
	return 0
}

func (x *JobDetail) GetFinishedAt() int64 {
	if x != nil {
		return x.FinishedAt
	}
	return 0
}

func (x *JobDetail) GetDuration() int64 {
	if x != nil {
		return x.Duration
	}
	return 0
}

func (x *JobDetail) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *JobDetail) GetLabelSelector() *LabelSelector {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

func (x *JobDetail) GetAgentLabels() map[string]string {
	if x != nil {
		return x.AgentLabels
	}
	return nil
}

// 列出任务请求
type ListJobsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`  // 流水线ID（可选）
	Status        JobStatus              `protobuf:"varint,2,opt,name=status,proto3,enum=api.job.v1.JobStatus" json:"status,omitempty"` // 状态过滤（可选）
	AgentId       string                 `protobuf:"bytes,3,opt,name=agent_id,json=agentId,proto3" json:"agent_id,omitempty"`           // Agent ID过滤（可选）
	Page          int32                  `protobuf:"varint,4,opt,name=page,proto3" json:"page,omitempty"`                               // 页码（从1开始）
	PageSize      int32                  `protobuf:"varint,5,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`       // 每页数量（默认20）
	SortBy        string                 `protobuf:"bytes,6,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`              // 排序字段（created_at、started_at等）
	SortDesc      bool                   `protobuf:"varint,7,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`       // 是否降序
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsRequest) Reset() {
	*x = ListJobsRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsRequest) ProtoMessage() {}

func (x *ListJobsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsRequest.ProtoReflect.Descriptor instead.
func (*ListJobsRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{8}
}

func (x *ListJobsRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *ListJobsRequest) GetStatus() JobStatus {
	if x != nil {
		return x.Status
	}
	return JobStatus_JOB_STATUS_UNKNOWN
}

func (x *ListJobsRequest) GetAgentId() string {
	if x != nil {
		return x.AgentId
	}
	return ""
}

func (x *ListJobsRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListJobsRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListJobsRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 列出任务响应
type ListJobsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Jobs          []*JobDetail           `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"`
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobsResponse) Reset() {
	*x = ListJobsResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobsResponse) ProtoMessage() {}

func (x *ListJobsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobsResponse.ProtoReflect.Descriptor instead.
func (*ListJobsResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{9}
}

func (x *ListJobsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListJobsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListJobsResponse) GetJobs() []*JobDetail {
	if x != nil {
		return x.Jobs
	}
	return nil
}

func (x *ListJobsResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListJobsResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListJobsResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 更新任务请求
type UpdateJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                         // 任务名称（可选）
	Commands      []string               `protobuf:"bytes,3,rep,name=commands,proto3" json:"commands,omitempty"`                                                                 // 执行命令列表（可选）
	Env           map[string]string      `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 环境变量（可选）
	Timeout       int32                  `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                  // 超时时间（可选）
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                                                         // 任务标签（可选）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobRequest) Reset() {
	*x = UpdateJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobRequest) ProtoMessage() {}

func (x *UpdateJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobRequest.ProtoReflect.Descriptor instead.
func (*UpdateJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{10}
}

func (x *UpdateJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *UpdateJobRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateJobRequest) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *UpdateJobRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *UpdateJobRequest) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *UpdateJobRequest) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

// 更新任务响应
type UpdateJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *UpdateJobResponse) Reset() {
	*x = UpdateJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateJobResponse) ProtoMessage() {}

func (x *UpdateJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateJobResponse.ProtoReflect.Descriptor instead.
func (*UpdateJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{11}
}

func (x *UpdateJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *UpdateJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 删除任务请求
type DeleteJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobRequest) Reset() {
	*x = DeleteJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobRequest) ProtoMessage() {}

func (x *DeleteJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobRequest.ProtoReflect.Descriptor instead.
func (*DeleteJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{12}
}

func (x *DeleteJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 删除任务响应
type DeleteJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteJobResponse) Reset() {
	*x = DeleteJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteJobResponse) ProtoMessage() {}

func (x *DeleteJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteJobResponse.ProtoReflect.Descriptor instead.
func (*DeleteJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{13}
}

func (x *DeleteJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *DeleteJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 取消任务请求
type CancelJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Reason        string                 `protobuf:"bytes,2,opt,name=reason,proto3" json:"reason,omitempty"` // 取消原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobRequest) Reset() {
	*x = CancelJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobRequest) ProtoMessage() {}

func (x *CancelJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobRequest.ProtoReflect.Descriptor instead.
func (*CancelJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{14}
}

func (x *CancelJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *CancelJobRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 取消任务响应
type CancelJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CancelJobResponse) Reset() {
	*x = CancelJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CancelJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CancelJobResponse) ProtoMessage() {}

func (x *CancelJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CancelJobResponse.ProtoReflect.Descriptor instead.
func (*CancelJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{15}
}

func (x *CancelJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CancelJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 重试任务请求
type RetryJobRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryJobRequest) Reset() {
	*x = RetryJobRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryJobRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryJobRequest) ProtoMessage() {}

func (x *RetryJobRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryJobRequest.ProtoReflect.Descriptor instead.
func (*RetryJobRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{16}
}

func (x *RetryJobRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 重试任务响应
type RetryJobResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	NewJobId      string                 `protobuf:"bytes,3,opt,name=new_job_id,json=newJobId,proto3" json:"new_job_id,omitempty"` // 新创建的任务ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RetryJobResponse) Reset() {
	*x = RetryJobResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RetryJobResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RetryJobResponse) ProtoMessage() {}

func (x *RetryJobResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RetryJobResponse.ProtoReflect.Descriptor instead.
func (*RetryJobResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{17}
}

func (x *RetryJobResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *RetryJobResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *RetryJobResponse) GetNewJobId() string {
	if x != nil {
		return x.NewJobId
	}
	return ""
}

// 获取任务日志请求
type GetJobLogRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	Offset        int32                  `protobuf:"varint,2,opt,name=offset,proto3" json:"offset,omitempty"` // 日志偏移量（行号）
	Limit         int32                  `protobuf:"varint,3,opt,name=limit,proto3" json:"limit,omitempty"`   // 获取数量（默认1000行）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogRequest) Reset() {
	*x = GetJobLogRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogRequest) ProtoMessage() {}

func (x *GetJobLogRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogRequest.ProtoReflect.Descriptor instead.
func (*GetJobLogRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{18}
}

func (x *GetJobLogRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

func (x *GetJobLogRequest) GetOffset() int32 {
	if x != nil {
		return x.Offset
	}
	return 0
}

func (x *GetJobLogRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// 获取任务日志响应
type GetJobLogResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Logs          []*LogLine             `protobuf:"bytes,3,rep,name=logs,proto3" json:"logs,omitempty"`
	TotalLines    int32                  `protobuf:"varint,4,opt,name=total_lines,json=totalLines,proto3" json:"total_lines,omitempty"` // 总行数
	HasMore       bool                   `protobuf:"varint,5,opt,name=has_more,json=hasMore,proto3" json:"has_more,omitempty"`          // 是否还有更多日志
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetJobLogResponse) Reset() {
	*x = GetJobLogResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetJobLogResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetJobLogResponse) ProtoMessage() {}

func (x *GetJobLogResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetJobLogResponse.ProtoReflect.Descriptor instead.
func (*GetJobLogResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{19}
}

func (x *GetJobLogResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetJobLogResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetJobLogResponse) GetLogs() []*LogLine {
	if x != nil {
		return x.Logs
	}
	return nil
}

func (x *GetJobLogResponse) GetTotalLines() int32 {
	if x != nil {
		return x.TotalLines
	}
	return 0
}

func (x *GetJobLogResponse) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// 日志行
type LogLine struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	LineNumber    int32                  `protobuf:"varint,1,opt,name=line_number,json=lineNumber,proto3" json:"line_number,omitempty"` // 行号
	Timestamp     int64                  `protobuf:"varint,2,opt,name=timestamp,proto3" json:"timestamp,omitempty"`                     // 时间戳
	Level         string                 `protobuf:"bytes,3,opt,name=level,proto3" json:"level,omitempty"`                              // 日志级别
	Content       string                 `protobuf:"bytes,4,opt,name=content,proto3" json:"content,omitempty"`                          // 日志内容
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LogLine) Reset() {
	*x = LogLine{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogLine) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogLine) ProtoMessage() {}

func (x *LogLine) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogLine.ProtoReflect.Descriptor instead.
func (*LogLine) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{20}
}

func (x *LogLine) GetLineNumber() int32 {
	if x != nil {
		return x.LineNumber
	}
	return 0
}

func (x *LogLine) GetTimestamp() int64 {
	if x != nil {
		return x.Timestamp
	}
	return 0
}

func (x *LogLine) GetLevel() string {
	if x != nil {
		return x.Level
	}
	return ""
}

func (x *LogLine) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// 列出任务产物请求
type ListJobArtifactsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	JobId         string                 `protobuf:"bytes,1,opt,name=job_id,json=jobId,proto3" json:"job_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobArtifactsRequest) Reset() {
	*x = ListJobArtifactsRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobArtifactsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobArtifactsRequest) ProtoMessage() {}

func (x *ListJobArtifactsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobArtifactsRequest.ProtoReflect.Descriptor instead.
func (*ListJobArtifactsRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{21}
}

func (x *ListJobArtifactsRequest) GetJobId() string {
	if x != nil {
		return x.JobId
	}
	return ""
}

// 列出任务产物响应
type ListJobArtifactsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Artifacts     []*Artifact            `protobuf:"bytes,3,rep,name=artifacts,proto3" json:"artifacts,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListJobArtifactsResponse) Reset() {
	*x = ListJobArtifactsResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListJobArtifactsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListJobArtifactsResponse) ProtoMessage() {}

func (x *ListJobArtifactsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListJobArtifactsResponse.ProtoReflect.Descriptor instead.
func (*ListJobArtifactsResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{22}
}

func (x *ListJobArtifactsResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListJobArtifactsResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListJobArtifactsResponse) GetArtifacts() []*Artifact {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

// 产物
type Artifact struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ArtifactId    string                 `protobuf:"bytes,1,opt,name=artifact_id,json=artifactId,proto3" json:"artifact_id,omitempty"`    // 产物ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                  // 产物名称
	Path          string                 `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                                  // 产物路径
	Size          int64                  `protobuf:"varint,4,opt,name=size,proto3" json:"size,omitempty"`                                 // 文件大小（字节）
	DownloadUrl   string                 `protobuf:"bytes,5,opt,name=download_url,json=downloadUrl,proto3" json:"download_url,omitempty"` // 下载URL
	CreatedAt     int64                  `protobuf:"varint,6,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`      // 创建时间
	ExpireAt      int64                  `protobuf:"varint,7,opt,name=expire_at,json=expireAt,proto3" json:"expire_at,omitempty"`         // 过期时间
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Artifact) Reset() {
	*x = Artifact{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Artifact) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Artifact) ProtoMessage() {}

func (x *Artifact) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Artifact.ProtoReflect.Descriptor instead.
func (*Artifact) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{23}
}

func (x *Artifact) GetArtifactId() string {
	if x != nil {
		return x.ArtifactId
	}
	return ""
}

func (x *Artifact) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Artifact) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *Artifact) GetSize() int64 {
	if x != nil {
		return x.Size
	}
	return 0
}

func (x *Artifact) GetDownloadUrl() string {
	if x != nil {
		return x.DownloadUrl
	}
	return ""
}

func (x *Artifact) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Artifact) GetExpireAt() int64 {
	if x != nil {
		return x.ExpireAt
	}
	return 0
}

// 创建流水线请求
type CreatePipelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                         // 流水线名称
	Description   string                 `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`                                                           // 描述
	RepoUrl       string                 `protobuf:"bytes,3,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`                                                    // 代码仓库URL
	Branch        string                 `protobuf:"bytes,4,opt,name=branch,proto3" json:"branch,omitempty"`                                                                     // 分支
	Stages        []*Stage               `protobuf:"bytes,5,rep,name=stages,proto3" json:"stages,omitempty"`                                                                     // 阶段配置
	Env           map[string]string      `protobuf:"bytes,6,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 全局环境变量
	TriggerType   TriggerType            `protobuf:"varint,7,opt,name=trigger_type,json=triggerType,proto3,enum=api.job.v1.TriggerType" json:"trigger_type,omitempty"`           // 触发类型
	Cron          string                 `protobuf:"bytes,8,opt,name=cron,proto3" json:"cron,omitempty"`                                                                         // Cron表达式（定时触发时使用）
	Webhooks      []string               `protobuf:"bytes,9,rep,name=webhooks,proto3" json:"webhooks,omitempty"`                                                                 // Webhook URL列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineRequest) Reset() {
	*x = CreatePipelineRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineRequest) ProtoMessage() {}

func (x *CreatePipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineRequest.ProtoReflect.Descriptor instead.
func (*CreatePipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{24}
}

func (x *CreatePipelineRequest) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreatePipelineRequest) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *CreatePipelineRequest) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *CreatePipelineRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *CreatePipelineRequest) GetStages() []*Stage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *CreatePipelineRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *CreatePipelineRequest) GetTriggerType() TriggerType {
	if x != nil {
		return x.TriggerType
	}
	return TriggerType_TRIGGER_TYPE_UNKNOWN
}

func (x *CreatePipelineRequest) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *CreatePipelineRequest) GetWebhooks() []string {
	if x != nil {
		return x.Webhooks
	}
	return nil
}

// 阶段配置
type Stage struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Order         int32                  `protobuf:"varint,1,opt,name=order,proto3" json:"order,omitempty"` // 阶段序号
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`    // 阶段名称
	Jobs          []*JobConfig           `protobuf:"bytes,3,rep,name=jobs,proto3" json:"jobs,omitempty"`    // 任务配置列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Stage) Reset() {
	*x = Stage{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Stage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Stage) ProtoMessage() {}

func (x *Stage) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Stage.ProtoReflect.Descriptor instead.
func (*Stage) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{25}
}

func (x *Stage) GetOrder() int32 {
	if x != nil {
		return x.Order
	}
	return 0
}

func (x *Stage) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Stage) GetJobs() []*JobConfig {
	if x != nil {
		return x.Jobs
	}
	return nil
}

// 任务配置
type JobConfig struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Name          string                 `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`                                                                         // 任务名称
	Commands      []string               `protobuf:"bytes,2,rep,name=commands,proto3" json:"commands,omitempty"`                                                                 // 执行命令
	Env           map[string]string      `protobuf:"bytes,3,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 环境变量
	Workspace     string                 `protobuf:"bytes,4,opt,name=workspace,proto3" json:"workspace,omitempty"`                                                               // 工作目录
	Timeout       int32                  `protobuf:"varint,5,opt,name=timeout,proto3" json:"timeout,omitempty"`                                                                  // 超时时间
	Tags          []string               `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`                                                                         // 任务标签（已废弃，建议使用label_selector）
	Image         string                 `protobuf:"bytes,7,opt,name=image,proto3" json:"image,omitempty"`                                                                       // Docker镜像
	Artifacts     []*ArtifactConfig      `protobuf:"bytes,8,rep,name=artifacts,proto3" json:"artifacts,omitempty"`                                                               // 产物配置
	AllowFailure  bool                   `protobuf:"varint,9,opt,name=allow_failure,json=allowFailure,proto3" json:"allow_failure,omitempty"`                                    // 是否允许失败
	RetryCount    int32                  `protobuf:"varint,10,opt,name=retry_count,json=retryCount,proto3" json:"retry_count,omitempty"`                                         // 重试次数
	LabelSelector *LabelSelector         `protobuf:"bytes,11,opt,name=label_selector,json=labelSelector,proto3" json:"label_selector,omitempty"`                                 // 标签选择器（用于匹配Agent）
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *JobConfig) Reset() {
	*x = JobConfig{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *JobConfig) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*JobConfig) ProtoMessage() {}

func (x *JobConfig) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use JobConfig.ProtoReflect.Descriptor instead.
func (*JobConfig) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{26}
}

func (x *JobConfig) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *JobConfig) GetCommands() []string {
	if x != nil {
		return x.Commands
	}
	return nil
}

func (x *JobConfig) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *JobConfig) GetWorkspace() string {
	if x != nil {
		return x.Workspace
	}
	return ""
}

func (x *JobConfig) GetTimeout() int32 {
	if x != nil {
		return x.Timeout
	}
	return 0
}

func (x *JobConfig) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

func (x *JobConfig) GetImage() string {
	if x != nil {
		return x.Image
	}
	return ""
}

func (x *JobConfig) GetArtifacts() []*ArtifactConfig {
	if x != nil {
		return x.Artifacts
	}
	return nil
}

func (x *JobConfig) GetAllowFailure() bool {
	if x != nil {
		return x.AllowFailure
	}
	return false
}

func (x *JobConfig) GetRetryCount() int32 {
	if x != nil {
		return x.RetryCount
	}
	return 0
}

func (x *JobConfig) GetLabelSelector() *LabelSelector {
	if x != nil {
		return x.LabelSelector
	}
	return nil
}

// 创建流水线响应
type CreatePipelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	PipelineId    string                 `protobuf:"bytes,3,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"` // 创建的流水线ID
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreatePipelineResponse) Reset() {
	*x = CreatePipelineResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreatePipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreatePipelineResponse) ProtoMessage() {}

func (x *CreatePipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreatePipelineResponse.ProtoReflect.Descriptor instead.
func (*CreatePipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{27}
}

func (x *CreatePipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *CreatePipelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *CreatePipelineResponse) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

// 获取流水线请求
type GetPipelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineRequest) Reset() {
	*x = GetPipelineRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineRequest) ProtoMessage() {}

func (x *GetPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineRequest.ProtoReflect.Descriptor instead.
func (*GetPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{28}
}

func (x *GetPipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

// 获取流水线响应
type GetPipelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pipeline      *PipelineDetail        `protobuf:"bytes,3,opt,name=pipeline,proto3" json:"pipeline,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetPipelineResponse) Reset() {
	*x = GetPipelineResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetPipelineResponse) ProtoMessage() {}

func (x *GetPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetPipelineResponse.ProtoReflect.Descriptor instead.
func (*GetPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{29}
}

func (x *GetPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *GetPipelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *GetPipelineResponse) GetPipeline() *PipelineDetail {
	if x != nil {
		return x.Pipeline
	}
	return nil
}

// 流水线详情
type PipelineDetail struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`                                           // 流水线ID
	Name          string                 `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`                                                                         // 流水线名称
	Description   string                 `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`                                                           // 描述
	RepoUrl       string                 `protobuf:"bytes,4,opt,name=repo_url,json=repoUrl,proto3" json:"repo_url,omitempty"`                                                    // 代码仓库URL
	Branch        string                 `protobuf:"bytes,5,opt,name=branch,proto3" json:"branch,omitempty"`                                                                     // 分支
	Status        PipelineStatus         `protobuf:"varint,6,opt,name=status,proto3,enum=api.job.v1.PipelineStatus" json:"status,omitempty"`                                     // 流水线状态
	Stages        []*Stage               `protobuf:"bytes,7,rep,name=stages,proto3" json:"stages,omitempty"`                                                                     // 阶段配置
	Env           map[string]string      `protobuf:"bytes,8,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 全局环境变量
	TriggerType   TriggerType            `protobuf:"varint,9,opt,name=trigger_type,json=triggerType,proto3,enum=api.job.v1.TriggerType" json:"trigger_type,omitempty"`           // 触发类型
	Cron          string                 `protobuf:"bytes,10,opt,name=cron,proto3" json:"cron,omitempty"`                                                                        // Cron表达式
	CreatedAt     int64                  `protobuf:"varint,11,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`                                            // 创建时间
	UpdatedAt     int64                  `protobuf:"varint,12,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`                                            // 更新时间
	CreatedBy     string                 `protobuf:"bytes,13,opt,name=created_by,json=createdBy,proto3" json:"created_by,omitempty"`                                             // 创建者
	TotalRuns     int32                  `protobuf:"varint,14,opt,name=total_runs,json=totalRuns,proto3" json:"total_runs,omitempty"`                                            // 总执行次数
	SuccessRuns   int32                  `protobuf:"varint,15,opt,name=success_runs,json=successRuns,proto3" json:"success_runs,omitempty"`                                      // 成功次数
	FailedRuns    int32                  `protobuf:"varint,16,opt,name=failed_runs,json=failedRuns,proto3" json:"failed_runs,omitempty"`                                         // 失败次数
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PipelineDetail) Reset() {
	*x = PipelineDetail{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PipelineDetail) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PipelineDetail) ProtoMessage() {}

func (x *PipelineDetail) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PipelineDetail.ProtoReflect.Descriptor instead.
func (*PipelineDetail) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{30}
}

func (x *PipelineDetail) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *PipelineDetail) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PipelineDetail) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *PipelineDetail) GetRepoUrl() string {
	if x != nil {
		return x.RepoUrl
	}
	return ""
}

func (x *PipelineDetail) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *PipelineDetail) GetStatus() PipelineStatus {
	if x != nil {
		return x.Status
	}
	return PipelineStatus_PIPELINE_STATUS_UNKNOWN
}

func (x *PipelineDetail) GetStages() []*Stage {
	if x != nil {
		return x.Stages
	}
	return nil
}

func (x *PipelineDetail) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *PipelineDetail) GetTriggerType() TriggerType {
	if x != nil {
		return x.TriggerType
	}
	return TriggerType_TRIGGER_TYPE_UNKNOWN
}

func (x *PipelineDetail) GetCron() string {
	if x != nil {
		return x.Cron
	}
	return ""
}

func (x *PipelineDetail) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *PipelineDetail) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *PipelineDetail) GetCreatedBy() string {
	if x != nil {
		return x.CreatedBy
	}
	return ""
}

func (x *PipelineDetail) GetTotalRuns() int32 {
	if x != nil {
		return x.TotalRuns
	}
	return 0
}

func (x *PipelineDetail) GetSuccessRuns() int32 {
	if x != nil {
		return x.SuccessRuns
	}
	return 0
}

func (x *PipelineDetail) GetFailedRuns() int32 {
	if x != nil {
		return x.FailedRuns
	}
	return 0
}

// 列出流水线请求
type ListPipelinesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Status        PipelineStatus         `protobuf:"varint,1,opt,name=status,proto3,enum=api.job.v1.PipelineStatus" json:"status,omitempty"` // 状态过滤（可选）
	Page          int32                  `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`                                    // 页码（从1开始）
	PageSize      int32                  `protobuf:"varint,3,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`            // 每页数量（默认20）
	SortBy        string                 `protobuf:"bytes,4,opt,name=sort_by,json=sortBy,proto3" json:"sort_by,omitempty"`                   // 排序字段
	SortDesc      bool                   `protobuf:"varint,5,opt,name=sort_desc,json=sortDesc,proto3" json:"sort_desc,omitempty"`            // 是否降序
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesRequest) Reset() {
	*x = ListPipelinesRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesRequest) ProtoMessage() {}

func (x *ListPipelinesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesRequest.ProtoReflect.Descriptor instead.
func (*ListPipelinesRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{31}
}

func (x *ListPipelinesRequest) GetStatus() PipelineStatus {
	if x != nil {
		return x.Status
	}
	return PipelineStatus_PIPELINE_STATUS_UNKNOWN
}

func (x *ListPipelinesRequest) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPipelinesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListPipelinesRequest) GetSortBy() string {
	if x != nil {
		return x.SortBy
	}
	return ""
}

func (x *ListPipelinesRequest) GetSortDesc() bool {
	if x != nil {
		return x.SortDesc
	}
	return false
}

// 列出流水线响应
type ListPipelinesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	Pipelines     []*PipelineDetail      `protobuf:"bytes,3,rep,name=pipelines,proto3" json:"pipelines,omitempty"`
	Total         int32                  `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`                       // 总数
	Page          int32                  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`                         // 当前页
	PageSize      int32                  `protobuf:"varint,6,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"` // 每页数量
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListPipelinesResponse) Reset() {
	*x = ListPipelinesResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListPipelinesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListPipelinesResponse) ProtoMessage() {}

func (x *ListPipelinesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListPipelinesResponse.ProtoReflect.Descriptor instead.
func (*ListPipelinesResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{32}
}

func (x *ListPipelinesResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *ListPipelinesResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *ListPipelinesResponse) GetPipelines() []*PipelineDetail {
	if x != nil {
		return x.Pipelines
	}
	return nil
}

func (x *ListPipelinesResponse) GetTotal() int32 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *ListPipelinesResponse) GetPage() int32 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *ListPipelinesResponse) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

// 触发流水线请求
type TriggerPipelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	Branch        string                 `protobuf:"bytes,2,opt,name=branch,proto3" json:"branch,omitempty"`                                                                     // 分支（可选，覆盖默认分支）
	CommitSha     string                 `protobuf:"bytes,3,opt,name=commit_sha,json=commitSha,proto3" json:"commit_sha,omitempty"`                                              // Commit SHA（可选）
	Env           map[string]string      `protobuf:"bytes,4,rep,name=env,proto3" json:"env,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"` // 额外的环境变量（可选）
	TriggeredBy   string                 `protobuf:"bytes,5,opt,name=triggered_by,json=triggeredBy,proto3" json:"triggered_by,omitempty"`                                        // 触发者
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerPipelineRequest) Reset() {
	*x = TriggerPipelineRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerPipelineRequest) ProtoMessage() {}

func (x *TriggerPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerPipelineRequest.ProtoReflect.Descriptor instead.
func (*TriggerPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{33}
}

func (x *TriggerPipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *TriggerPipelineRequest) GetBranch() string {
	if x != nil {
		return x.Branch
	}
	return ""
}

func (x *TriggerPipelineRequest) GetCommitSha() string {
	if x != nil {
		return x.CommitSha
	}
	return ""
}

func (x *TriggerPipelineRequest) GetEnv() map[string]string {
	if x != nil {
		return x.Env
	}
	return nil
}

func (x *TriggerPipelineRequest) GetTriggeredBy() string {
	if x != nil {
		return x.TriggeredBy
	}
	return ""
}

// 触发流水线响应
type TriggerPipelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	RunId         string                 `protobuf:"bytes,3,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"`    // 流水线执行ID
	JobIds        []string               `protobuf:"bytes,4,rep,name=job_ids,json=jobIds,proto3" json:"job_ids,omitempty"` // 创建的任务ID列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *TriggerPipelineResponse) Reset() {
	*x = TriggerPipelineResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TriggerPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TriggerPipelineResponse) ProtoMessage() {}

func (x *TriggerPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TriggerPipelineResponse.ProtoReflect.Descriptor instead.
func (*TriggerPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{34}
}

func (x *TriggerPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *TriggerPipelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

func (x *TriggerPipelineResponse) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *TriggerPipelineResponse) GetJobIds() []string {
	if x != nil {
		return x.JobIds
	}
	return nil
}

// 停止流水线请求
type StopPipelineRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PipelineId    string                 `protobuf:"bytes,1,opt,name=pipeline_id,json=pipelineId,proto3" json:"pipeline_id,omitempty"`
	RunId         string                 `protobuf:"bytes,2,opt,name=run_id,json=runId,proto3" json:"run_id,omitempty"` // 流水线执行ID
	Reason        string                 `protobuf:"bytes,3,opt,name=reason,proto3" json:"reason,omitempty"`            // 停止原因
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPipelineRequest) Reset() {
	*x = StopPipelineRequest{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineRequest) ProtoMessage() {}

func (x *StopPipelineRequest) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineRequest.ProtoReflect.Descriptor instead.
func (*StopPipelineRequest) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{35}
}

func (x *StopPipelineRequest) GetPipelineId() string {
	if x != nil {
		return x.PipelineId
	}
	return ""
}

func (x *StopPipelineRequest) GetRunId() string {
	if x != nil {
		return x.RunId
	}
	return ""
}

func (x *StopPipelineRequest) GetReason() string {
	if x != nil {
		return x.Reason
	}
	return ""
}

// 停止流水线响应
type StopPipelineResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"`
	Message       string                 `protobuf:"bytes,2,opt,name=message,proto3" json:"message,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StopPipelineResponse) Reset() {
	*x = StopPipelineResponse{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StopPipelineResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StopPipelineResponse) ProtoMessage() {}

func (x *StopPipelineResponse) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StopPipelineResponse.ProtoReflect.Descriptor instead.
func (*StopPipelineResponse) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{36}
}

func (x *StopPipelineResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

func (x *StopPipelineResponse) GetMessage() string {
	if x != nil {
		return x.Message
	}
	return ""
}

// 标签选择器 - 用于任务匹配Agent
type LabelSelector struct {
	state protoimpl.MessageState `protogen:"open.v1"`
	// 匹配所有指定的标签（AND逻辑）
	MatchLabels map[string]string `protobuf:"bytes,1,rep,name=match_labels,json=matchLabels,proto3" json:"match_labels,omitempty" protobuf_key:"bytes,1,opt,name=key" protobuf_val:"bytes,2,opt,name=value"`
	// 标签表达式（支持更复杂的匹配规则）
	MatchExpressions []*LabelSelectorRequirement `protobuf:"bytes,2,rep,name=match_expressions,json=matchExpressions,proto3" json:"match_expressions,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *LabelSelector) Reset() {
	*x = LabelSelector{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelSelector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelector) ProtoMessage() {}

func (x *LabelSelector) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelector.ProtoReflect.Descriptor instead.
func (*LabelSelector) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{37}
}

func (x *LabelSelector) GetMatchLabels() map[string]string {
	if x != nil {
		return x.MatchLabels
	}
	return nil
}

func (x *LabelSelector) GetMatchExpressions() []*LabelSelectorRequirement {
	if x != nil {
		return x.MatchExpressions
	}
	return nil
}

// 标签选择器要求
type LabelSelectorRequirement struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Key           string                 `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                          // 标签key
	Operator      LabelOperator          `protobuf:"varint,2,opt,name=operator,proto3,enum=api.job.v1.LabelOperator" json:"operator,omitempty"` // 操作符
	Values        []string               `protobuf:"bytes,3,rep,name=values,proto3" json:"values,omitempty"`                                    // 值列表
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *LabelSelectorRequirement) Reset() {
	*x = LabelSelectorRequirement{}
	mi := &file_api_job_v1_proto_job_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LabelSelectorRequirement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LabelSelectorRequirement) ProtoMessage() {}

func (x *LabelSelectorRequirement) ProtoReflect() protoreflect.Message {
	mi := &file_api_job_v1_proto_job_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LabelSelectorRequirement.ProtoReflect.Descriptor instead.
func (*LabelSelectorRequirement) Descriptor() ([]byte, []int) {
	return file_api_job_v1_proto_job_proto_rawDescGZIP(), []int{38}
}

func (x *LabelSelectorRequirement) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *LabelSelectorRequirement) GetOperator() LabelOperator {
	if x != nil {
		return x.Operator
	}
	return LabelOperator_LABEL_OPERATOR_UNKNOWN
}

func (x *LabelSelectorRequirement) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

var File_api_job_v1_proto_job_proto protoreflect.FileDescriptor

const file_api_job_v1_proto_job_proto_rawDesc = "" +
	"\n" +
	"\x1aapi/job/v1/proto/job.proto\x12\n" +
	"api.job.v1\"'\n" +
	"\vPingRequest\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\"F\n" +
	"\fPingResponse\x12\x18\n" +
	"\amessage\x18\x01 \x01(\tR\amessage\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\"\xae\x05\n" +
	"\x10CreateJobRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1f\n" +
	"\vpipeline_id\x18\x02 \x01(\tR\n" +
	"pipelineId\x12\x14\n" +
	"\x05stage\x18\x03 \x01(\x05R\x05stage\x12\x1a\n" +
	"\bcommands\x18\x04 \x03(\tR\bcommands\x127\n" +
	"\x03env\x18\x05 \x03(\v2%.api.job.v1.CreateJobRequest.EnvEntryR\x03env\x12\x1c\n" +
	"\tworkspace\x18\x06 \x01(\tR\tworkspace\x12\x18\n" +
	"\atimeout\x18\a \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\b \x03(\tR\x04tags\x12\x14\n" +
	"\x05image\x18\t \x01(\tR\x05image\x12C\n" +
	"\asecrets\x18\n" +
	" \x03(\v2).api.job.v1.CreateJobRequest.SecretsEntryR\asecrets\x128\n" +
	"\tartifacts\x18\v \x03(\v2\x1a.api.job.v1.ArtifactConfigR\tartifacts\x12\x1d\n" +
	"\n" +
	"depends_on\x18\f \x03(\tR\tdependsOn\x12#\n" +
	"\rallow_failure\x18\r \x01(\bR\fallowFailure\x12\x1f\n" +
	"\vretry_count\x18\x0e \x01(\x05R\n" +
	"retryCount\x12@\n" +
	"\x0elabel_selector\x18\x0f \x01(\v2\x19.api.job.v1.LabelSelectorR\rlabelSelector\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a:\n" +
	"\fSecretsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\x93\x01\n" +
	"\x0eArtifactConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x02 \x01(\tR\x04path\x12 \n" +
	"\vdestination\x18\x03 \x01(\tR\vdestination\x12\x16\n" +
	"\x06expire\x18\x04 \x01(\bR\x06expire\x12\x1f\n" +
	"\vexpire_days\x18\x05 \x01(\x03R\n" +
	"expireDays\"^\n" +
	"\x11CreateJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x15\n" +
	"\x06job_id\x18\x03 \x01(\tR\x05jobId\"&\n" +
	"\rGetJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"m\n" +
	"\x0eGetJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x03job\x18\x03 \x01(\v2\x15.api.job.v1.JobDetailR\x03job\"\x8c\b\n" +
	"\tJobDetail\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1f\n" +
	"\vpipeline_id\x18\x03 \x01(\tR\n" +
	"pipelineId\x12\x14\n" +
	"\x05stage\x18\x04 \x01(\x05R\x05stage\x12-\n" +
	"\x06status\x18\x05 \x01(\x0e2\x15.api.job.v1.JobStatusR\x06status\x12\x1a\n" +
	"\bcommands\x18\x06 \x03(\tR\bcommands\x120\n" +
	"\x03env\x18\a \x03(\v2\x1e.api.job.v1.JobDetail.EnvEntryR\x03env\x12\x1c\n" +
	"\tworkspace\x18\b \x01(\tR\tworkspace\x12\x18\n" +
	"\atimeout\x18\t \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\n" +
	" \x03(\tR\x04tags\x12\x14\n" +
	"\x05image\x18\v \x01(\tR\x05image\x128\n" +
	"\tartifacts\x18\f \x03(\v2\x1a.api.job.v1.ArtifactConfigR\tartifacts\x12\x1d\n" +
	"\n" +
	"depends_on\x18\r \x03(\tR\tdependsOn\x12#\n" +
	"\rallow_failure\x18\x0e \x01(\bR\fallowFailure\x12\x1f\n" +
	"\vretry_count\x18\x0f \x01(\x05R\n" +
	"retryCount\x12#\n" +
	"\rretried_times\x18\x10 \x01(\x05R\fretriedTimes\x12\x19\n" +
	"\bagent_id\x18\x11 \x01(\tR\aagentId\x12\x1b\n" +
	"\texit_code\x18\x12 \x01(\x05R\bexitCode\x12#\n" +
	"\rerror_message\x18\x13 \x01(\tR\ferrorMessage\x12\x1d\n" +
	"\n" +
	"created_at\x18\x14 \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"started_at\x18\x15 \x01(\x03R\tstartedAt\x12\x1f\n" +
	"\vfinished_at\x18\x16 \x01(\x03R\n" +
	"finishedAt\x12\x1a\n" +
	"\bduration\x18\x17 \x01(\x03R\bduration\x12\x1d\n" +
	"\n" +
	"created_by\x18\x18 \x01(\tR\tcreatedBy\x12@\n" +
	"\x0elabel_selector\x18\x19 \x01(\v2\x19.api.job.v1.LabelSelectorR\rlabelSelector\x12I\n" +
	"\fagent_labels\x18\x1a \x03(\v2&.api.job.v1.JobDetail.AgentLabelsEntryR\vagentLabels\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\x1a>\n" +
	"\x10AgentLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xe3\x01\n" +
	"\x0fListJobsRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12-\n" +
	"\x06status\x18\x02 \x01(\x0e2\x15.api.job.v1.JobStatusR\x06status\x12\x19\n" +
	"\bagent_id\x18\x03 \x01(\tR\aagentId\x12\x12\n" +
	"\x04page\x18\x04 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x05 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x06 \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\a \x01(\bR\bsortDesc\"\xb8\x01\n" +
	"\x10ListJobsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12)\n" +
	"\x04jobs\x18\x03 \x03(\v2\x15.api.job.v1.JobDetailR\x04jobs\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\xf8\x01\n" +
	"\x10UpdateJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x1a\n" +
	"\bcommands\x18\x03 \x03(\tR\bcommands\x127\n" +
	"\x03env\x18\x04 \x03(\v2%.api.job.v1.UpdateJobRequest.EnvEntryR\x03env\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"G\n" +
	"\x11UpdateJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\")\n" +
	"\x10DeleteJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"G\n" +
	"\x11DeleteJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"A\n" +
	"\x10CancelJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06reason\x18\x02 \x01(\tR\x06reason\"G\n" +
	"\x11CancelJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"(\n" +
	"\x0fRetryJobRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"d\n" +
	"\x10RetryJobResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1c\n" +
	"\n" +
	"new_job_id\x18\x03 \x01(\tR\bnewJobId\"W\n" +
	"\x10GetJobLogRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\x12\x16\n" +
	"\x06offset\x18\x02 \x01(\x05R\x06offset\x12\x14\n" +
	"\x05limit\x18\x03 \x01(\x05R\x05limit\"\xac\x01\n" +
	"\x11GetJobLogResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12'\n" +
	"\x04logs\x18\x03 \x03(\v2\x13.api.job.v1.LogLineR\x04logs\x12\x1f\n" +
	"\vtotal_lines\x18\x04 \x01(\x05R\n" +
	"totalLines\x12\x19\n" +
	"\bhas_more\x18\x05 \x01(\bR\ahasMore\"x\n" +
	"\aLogLine\x12\x1f\n" +
	"\vline_number\x18\x01 \x01(\x05R\n" +
	"lineNumber\x12\x1c\n" +
	"\ttimestamp\x18\x02 \x01(\x03R\ttimestamp\x12\x14\n" +
	"\x05level\x18\x03 \x01(\tR\x05level\x12\x18\n" +
	"\acontent\x18\x04 \x01(\tR\acontent\"0\n" +
	"\x17ListJobArtifactsRequest\x12\x15\n" +
	"\x06job_id\x18\x01 \x01(\tR\x05jobId\"\x82\x01\n" +
	"\x18ListJobArtifactsResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x122\n" +
	"\tartifacts\x18\x03 \x03(\v2\x14.api.job.v1.ArtifactR\tartifacts\"\xc6\x01\n" +
	"\bArtifact\x12\x1f\n" +
	"\vartifact_id\x18\x01 \x01(\tR\n" +
	"artifactId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12\x12\n" +
	"\x04path\x18\x03 \x01(\tR\x04path\x12\x12\n" +
	"\x04size\x18\x04 \x01(\x03R\x04size\x12!\n" +
	"\fdownload_url\x18\x05 \x01(\tR\vdownloadUrl\x12\x1d\n" +
	"\n" +
	"created_at\x18\x06 \x01(\x03R\tcreatedAt\x12\x1b\n" +
	"\texpire_at\x18\a \x01(\x03R\bexpireAt\"\x8d\x03\n" +
	"\x15CreatePipelineRequest\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x02 \x01(\tR\vdescription\x12\x19\n" +
	"\brepo_url\x18\x03 \x01(\tR\arepoUrl\x12\x16\n" +
	"\x06branch\x18\x04 \x01(\tR\x06branch\x12)\n" +
	"\x06stages\x18\x05 \x03(\v2\x11.api.job.v1.StageR\x06stages\x12<\n" +
	"\x03env\x18\x06 \x03(\v2*.api.job.v1.CreatePipelineRequest.EnvEntryR\x03env\x12:\n" +
	"\ftrigger_type\x18\a \x01(\x0e2\x17.api.job.v1.TriggerTypeR\vtriggerType\x12\x12\n" +
	"\x04cron\x18\b \x01(\tR\x04cron\x12\x1a\n" +
	"\bwebhooks\x18\t \x03(\tR\bwebhooks\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\\\n" +
	"\x05Stage\x12\x14\n" +
	"\x05order\x18\x01 \x01(\x05R\x05order\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12)\n" +
	"\x04jobs\x18\x03 \x03(\v2\x15.api.job.v1.JobConfigR\x04jobs\"\xc9\x03\n" +
	"\tJobConfig\x12\x12\n" +
	"\x04name\x18\x01 \x01(\tR\x04name\x12\x1a\n" +
	"\bcommands\x18\x02 \x03(\tR\bcommands\x120\n" +
	"\x03env\x18\x03 \x03(\v2\x1e.api.job.v1.JobConfig.EnvEntryR\x03env\x12\x1c\n" +
	"\tworkspace\x18\x04 \x01(\tR\tworkspace\x12\x18\n" +
	"\atimeout\x18\x05 \x01(\x05R\atimeout\x12\x12\n" +
	"\x04tags\x18\x06 \x03(\tR\x04tags\x12\x14\n" +
	"\x05image\x18\a \x01(\tR\x05image\x128\n" +
	"\tartifacts\x18\b \x03(\v2\x1a.api.job.v1.ArtifactConfigR\tartifacts\x12#\n" +
	"\rallow_failure\x18\t \x01(\bR\fallowFailure\x12\x1f\n" +
	"\vretry_count\x18\n" +
	" \x01(\x05R\n" +
	"retryCount\x12@\n" +
	"\x0elabel_selector\x18\v \x01(\v2\x19.api.job.v1.LabelSelectorR\rlabelSelector\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"m\n" +
	"\x16CreatePipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x1f\n" +
	"\vpipeline_id\x18\x03 \x01(\tR\n" +
	"pipelineId\"5\n" +
	"\x12GetPipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\"\x81\x01\n" +
	"\x13GetPipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x126\n" +
	"\bpipeline\x18\x03 \x01(\v2\x1a.api.job.v1.PipelineDetailR\bpipeline\"\xf8\x04\n" +
	"\x0ePipelineDetail\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x12\n" +
	"\x04name\x18\x02 \x01(\tR\x04name\x12 \n" +
	"\vdescription\x18\x03 \x01(\tR\vdescription\x12\x19\n" +
	"\brepo_url\x18\x04 \x01(\tR\arepoUrl\x12\x16\n" +
	"\x06branch\x18\x05 \x01(\tR\x06branch\x122\n" +
	"\x06status\x18\x06 \x01(\x0e2\x1a.api.job.v1.PipelineStatusR\x06status\x12)\n" +
	"\x06stages\x18\a \x03(\v2\x11.api.job.v1.StageR\x06stages\x125\n" +
	"\x03env\x18\b \x03(\v2#.api.job.v1.PipelineDetail.EnvEntryR\x03env\x12:\n" +
	"\ftrigger_type\x18\t \x01(\x0e2\x17.api.job.v1.TriggerTypeR\vtriggerType\x12\x12\n" +
	"\x04cron\x18\n" +
	" \x01(\tR\x04cron\x12\x1d\n" +
	"\n" +
	"created_at\x18\v \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\f \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"created_by\x18\r \x01(\tR\tcreatedBy\x12\x1d\n" +
	"\n" +
	"total_runs\x18\x0e \x01(\x05R\ttotalRuns\x12!\n" +
	"\fsuccess_runs\x18\x0f \x01(\x05R\vsuccessRuns\x12\x1f\n" +
	"\vfailed_runs\x18\x10 \x01(\x05R\n" +
	"failedRuns\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"\xb1\x01\n" +
	"\x14ListPipelinesRequest\x122\n" +
	"\x06status\x18\x01 \x01(\x0e2\x1a.api.job.v1.PipelineStatusR\x06status\x12\x12\n" +
	"\x04page\x18\x02 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x03 \x01(\x05R\bpageSize\x12\x17\n" +
	"\asort_by\x18\x04 \x01(\tR\x06sortBy\x12\x1b\n" +
	"\tsort_desc\x18\x05 \x01(\bR\bsortDesc\"\xcc\x01\n" +
	"\x15ListPipelinesResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x128\n" +
	"\tpipelines\x18\x03 \x03(\v2\x1a.api.job.v1.PipelineDetailR\tpipelines\x12\x14\n" +
	"\x05total\x18\x04 \x01(\x05R\x05total\x12\x12\n" +
	"\x04page\x18\x05 \x01(\x05R\x04page\x12\x1b\n" +
	"\tpage_size\x18\x06 \x01(\x05R\bpageSize\"\x8a\x02\n" +
	"\x16TriggerPipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x16\n" +
	"\x06branch\x18\x02 \x01(\tR\x06branch\x12\x1d\n" +
	"\n" +
	"commit_sha\x18\x03 \x01(\tR\tcommitSha\x12=\n" +
	"\x03env\x18\x04 \x03(\v2+.api.job.v1.TriggerPipelineRequest.EnvEntryR\x03env\x12!\n" +
	"\ftriggered_by\x18\x05 \x01(\tR\vtriggeredBy\x1a6\n" +
	"\bEnvEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"}\n" +
	"\x17TriggerPipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\x12\x15\n" +
	"\x06run_id\x18\x03 \x01(\tR\x05runId\x12\x17\n" +
	"\ajob_ids\x18\x04 \x03(\tR\x06jobIds\"e\n" +
	"\x13StopPipelineRequest\x12\x1f\n" +
	"\vpipeline_id\x18\x01 \x01(\tR\n" +
	"pipelineId\x12\x15\n" +
	"\x06run_id\x18\x02 \x01(\tR\x05runId\x12\x16\n" +
	"\x06reason\x18\x03 \x01(\tR\x06reason\"J\n" +
	"\x14StopPipelineResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\x12\x18\n" +
	"\amessage\x18\x02 \x01(\tR\amessage\"\xf1\x01\n" +
	"\rLabelSelector\x12M\n" +
	"\fmatch_labels\x18\x01 \x03(\v2*.api.job.v1.LabelSelector.MatchLabelsEntryR\vmatchLabels\x12Q\n" +
	"\x11match_expressions\x18\x02 \x03(\v2$.api.job.v1.LabelSelectorRequirementR\x10matchExpressions\x1a>\n" +
	"\x10MatchLabelsEntry\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x12\x14\n" +
	"\x05value\x18\x02 \x01(\tR\x05value:\x028\x01\"{\n" +
	"\x18LabelSelectorRequirement\x12\x10\n" +
	"\x03key\x18\x01 \x01(\tR\x03key\x125\n" +
	"\boperator\x18\x02 \x01(\x0e2\x19.api.job.v1.LabelOperatorR\boperator\x12\x16\n" +
	"\x06values\x18\x03 \x03(\tR\x06values*\xe3\x01\n" +
	"\tJobStatus\x12\x16\n" +
	"\x12JOB_STATUS_UNKNOWN\x10\x00\x12\x16\n" +
	"\x12JOB_STATUS_PENDING\x10\x01\x12\x15\n" +
	"\x11JOB_STATUS_QUEUED\x10\x02\x12\x16\n" +
	"\x12JOB_STATUS_RUNNING\x10\x03\x12\x16\n" +
	"\x12JOB_STATUS_SUCCESS\x10\x04\x12\x15\n" +
	"\x11JOB_STATUS_FAILED\x10\x05\x12\x18\n" +
	"\x14JOB_STATUS_CANCELLED\x10\x06\x12\x16\n" +
	"\x12JOB_STATUS_TIMEOUT\x10\a\x12\x16\n" +
	"\x12JOB_STATUS_SKIPPED\x10\b*\xdc\x01\n" +
	"\x0ePipelineStatus\x12\x1b\n" +
	"\x17PIPELINE_STATUS_UNKNOWN\x10\x00\x12\x1b\n" +
	"\x17PIPELINE_STATUS_PENDING\x10\x01\x12\x1b\n" +
	"\x17PIPELINE_STATUS_RUNNING\x10\x02\x12\x1b\n" +
	"\x17PIPELINE_STATUS_SUCCESS\x10\x03\x12\x1a\n" +
	"\x16PIPELINE_STATUS_FAILED\x10\x04\x12\x1d\n" +
	"\x19PIPELINE_STATUS_CANCELLED\x10\x05\x12\x1b\n" +
	"\x17PIPELINE_STATUS_PARTIAL\x10\x06*\x8b\x01\n" +
	"\vTriggerType\x12\x18\n" +
	"\x14TRIGGER_TYPE_UNKNOWN\x10\x00\x12\x17\n" +
	"\x13TRIGGER_TYPE_MANUAL\x10\x01\x12\x18\n" +
	"\x14TRIGGER_TYPE_WEBHOOK\x10\x02\x12\x19\n" +
	"\x15TRIGGER_TYPE_SCHEDULE\x10\x03\x12\x14\n" +
	"\x10TRIGGER_TYPE_API\x10\x04*\xc5\x01\n" +
	"\rLabelOperator\x12\x1a\n" +
	"\x16LABEL_OPERATOR_UNKNOWN\x10\x00\x12\x15\n" +
	"\x11LABEL_OPERATOR_IN\x10\x01\x12\x19\n" +
	"\x15LABEL_OPERATOR_NOT_IN\x10\x02\x12\x19\n" +
	"\x15LABEL_OPERATOR_EXISTS\x10\x03\x12\x1d\n" +
	"\x19LABEL_OPERATOR_NOT_EXISTS\x10\x04\x12\x15\n" +
	"\x11LABEL_OPERATOR_GT\x10\x05\x12\x15\n" +
	"\x11LABEL_OPERATOR_LT\x10\x062\xac\t\n" +
	"\x03Job\x12;\n" +
	"\x04Ping\x12\x17.api.job.v1.PingRequest\x1a\x18.api.job.v1.PingResponse\"\x00\x12J\n" +
	"\tCreateJob\x12\x1c.api.job.v1.CreateJobRequest\x1a\x1d.api.job.v1.CreateJobResponse\"\x00\x12A\n" +
	"\x06GetJob\x12\x19.api.job.v1.GetJobRequest\x1a\x1a.api.job.v1.GetJobResponse\"\x00\x12G\n" +
	"\bListJobs\x12\x1b.api.job.v1.ListJobsRequest\x1a\x1c.api.job.v1.ListJobsResponse\"\x00\x12J\n" +
	"\tUpdateJob\x12\x1c.api.job.v1.UpdateJobRequest\x1a\x1d.api.job.v1.UpdateJobResponse\"\x00\x12J\n" +
	"\tDeleteJob\x12\x1c.api.job.v1.DeleteJobRequest\x1a\x1d.api.job.v1.DeleteJobResponse\"\x00\x12J\n" +
	"\tCancelJob\x12\x1c.api.job.v1.CancelJobRequest\x1a\x1d.api.job.v1.CancelJobResponse\"\x00\x12G\n" +
	"\bRetryJob\x12\x1b.api.job.v1.RetryJobRequest\x1a\x1c.api.job.v1.RetryJobResponse\"\x00\x12J\n" +
	"\tGetJobLog\x12\x1c.api.job.v1.GetJobLogRequest\x1a\x1d.api.job.v1.GetJobLogResponse\"\x00\x12_\n" +
	"\x10ListJobArtifacts\x12#.api.job.v1.ListJobArtifactsRequest\x1a$.api.job.v1.ListJobArtifactsResponse\"\x00\x12Y\n" +
	"\x0eCreatePipeline\x12!.api.job.v1.CreatePipelineRequest\x1a\".api.job.v1.CreatePipelineResponse\"\x00\x12P\n" +
	"\vGetPipeline\x12\x1e.api.job.v1.GetPipelineRequest\x1a\x1f.api.job.v1.GetPipelineResponse\"\x00\x12V\n" +
	"\rListPipelines\x12 .api.job.v1.ListPipelinesRequest\x1a!.api.job.v1.ListPipelinesResponse\"\x00\x12\\\n" +
	"\x0fTriggerPipeline\x12\".api.job.v1.TriggerPipelineRequest\x1a#.api.job.v1.TriggerPipelineResponse\"\x00\x12S\n" +
	"\fStopPipeline\x12\x1f.api.job.v1.StopPipelineRequest\x1a .api.job.v1.StopPipelineResponse\"\x00B,Z*github.com/observabil/arcade/api/job/v1;v1b\x06proto3"

var (
	file_api_job_v1_proto_job_proto_rawDescOnce sync.Once
	file_api_job_v1_proto_job_proto_rawDescData []byte
)

func file_api_job_v1_proto_job_proto_rawDescGZIP() []byte {
	file_api_job_v1_proto_job_proto_rawDescOnce.Do(func() {
		file_api_job_v1_proto_job_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_api_job_v1_proto_job_proto_rawDesc), len(file_api_job_v1_proto_job_proto_rawDesc)))
	})
	return file_api_job_v1_proto_job_proto_rawDescData
}

var file_api_job_v1_proto_job_proto_enumTypes = make([]protoimpl.EnumInfo, 4)
var file_api_job_v1_proto_job_proto_msgTypes = make([]protoimpl.MessageInfo, 49)
var file_api_job_v1_proto_job_proto_goTypes = []any{
	(JobStatus)(0),                   // 0: api.job.v1.JobStatus
	(PipelineStatus)(0),              // 1: api.job.v1.PipelineStatus
	(TriggerType)(0),                 // 2: api.job.v1.TriggerType
	(LabelOperator)(0),               // 3: api.job.v1.LabelOperator
	(*PingRequest)(nil),              // 4: api.job.v1.PingRequest
	(*PingResponse)(nil),             // 5: api.job.v1.PingResponse
	(*CreateJobRequest)(nil),         // 6: api.job.v1.CreateJobRequest
	(*ArtifactConfig)(nil),           // 7: api.job.v1.ArtifactConfig
	(*CreateJobResponse)(nil),        // 8: api.job.v1.CreateJobResponse
	(*GetJobRequest)(nil),            // 9: api.job.v1.GetJobRequest
	(*GetJobResponse)(nil),           // 10: api.job.v1.GetJobResponse
	(*JobDetail)(nil),                // 11: api.job.v1.JobDetail
	(*ListJobsRequest)(nil),          // 12: api.job.v1.ListJobsRequest
	(*ListJobsResponse)(nil),         // 13: api.job.v1.ListJobsResponse
	(*UpdateJobRequest)(nil),         // 14: api.job.v1.UpdateJobRequest
	(*UpdateJobResponse)(nil),        // 15: api.job.v1.UpdateJobResponse
	(*DeleteJobRequest)(nil),         // 16: api.job.v1.DeleteJobRequest
	(*DeleteJobResponse)(nil),        // 17: api.job.v1.DeleteJobResponse
	(*CancelJobRequest)(nil),         // 18: api.job.v1.CancelJobRequest
	(*CancelJobResponse)(nil),        // 19: api.job.v1.CancelJobResponse
	(*RetryJobRequest)(nil),          // 20: api.job.v1.RetryJobRequest
	(*RetryJobResponse)(nil),         // 21: api.job.v1.RetryJobResponse
	(*GetJobLogRequest)(nil),         // 22: api.job.v1.GetJobLogRequest
	(*GetJobLogResponse)(nil),        // 23: api.job.v1.GetJobLogResponse
	(*LogLine)(nil),                  // 24: api.job.v1.LogLine
	(*ListJobArtifactsRequest)(nil),  // 25: api.job.v1.ListJobArtifactsRequest
	(*ListJobArtifactsResponse)(nil), // 26: api.job.v1.ListJobArtifactsResponse
	(*Artifact)(nil),                 // 27: api.job.v1.Artifact
	(*CreatePipelineRequest)(nil),    // 28: api.job.v1.CreatePipelineRequest
	(*Stage)(nil),                    // 29: api.job.v1.Stage
	(*JobConfig)(nil),                // 30: api.job.v1.JobConfig
	(*CreatePipelineResponse)(nil),   // 31: api.job.v1.CreatePipelineResponse
	(*GetPipelineRequest)(nil),       // 32: api.job.v1.GetPipelineRequest
	(*GetPipelineResponse)(nil),      // 33: api.job.v1.GetPipelineResponse
	(*PipelineDetail)(nil),           // 34: api.job.v1.PipelineDetail
	(*ListPipelinesRequest)(nil),     // 35: api.job.v1.ListPipelinesRequest
	(*ListPipelinesResponse)(nil),    // 36: api.job.v1.ListPipelinesResponse
	(*TriggerPipelineRequest)(nil),   // 37: api.job.v1.TriggerPipelineRequest
	(*TriggerPipelineResponse)(nil),  // 38: api.job.v1.TriggerPipelineResponse
	(*StopPipelineRequest)(nil),      // 39: api.job.v1.StopPipelineRequest
	(*StopPipelineResponse)(nil),     // 40: api.job.v1.StopPipelineResponse
	(*LabelSelector)(nil),            // 41: api.job.v1.LabelSelector
	(*LabelSelectorRequirement)(nil), // 42: api.job.v1.LabelSelectorRequirement
	nil,                              // 43: api.job.v1.CreateJobRequest.EnvEntry
	nil,                              // 44: api.job.v1.CreateJobRequest.SecretsEntry
	nil,                              // 45: api.job.v1.JobDetail.EnvEntry
	nil,                              // 46: api.job.v1.JobDetail.AgentLabelsEntry
	nil,                              // 47: api.job.v1.UpdateJobRequest.EnvEntry
	nil,                              // 48: api.job.v1.CreatePipelineRequest.EnvEntry
	nil,                              // 49: api.job.v1.JobConfig.EnvEntry
	nil,                              // 50: api.job.v1.PipelineDetail.EnvEntry
	nil,                              // 51: api.job.v1.TriggerPipelineRequest.EnvEntry
	nil,                              // 52: api.job.v1.LabelSelector.MatchLabelsEntry
}
var file_api_job_v1_proto_job_proto_depIdxs = []int32{
	43, // 0: api.job.v1.CreateJobRequest.env:type_name -> api.job.v1.CreateJobRequest.EnvEntry
	44, // 1: api.job.v1.CreateJobRequest.secrets:type_name -> api.job.v1.CreateJobRequest.SecretsEntry
	7,  // 2: api.job.v1.CreateJobRequest.artifacts:type_name -> api.job.v1.ArtifactConfig
	41, // 3: api.job.v1.CreateJobRequest.label_selector:type_name -> api.job.v1.LabelSelector
	11, // 4: api.job.v1.GetJobResponse.job:type_name -> api.job.v1.JobDetail
	0,  // 5: api.job.v1.JobDetail.status:type_name -> api.job.v1.JobStatus
	45, // 6: api.job.v1.JobDetail.env:type_name -> api.job.v1.JobDetail.EnvEntry
	7,  // 7: api.job.v1.JobDetail.artifacts:type_name -> api.job.v1.ArtifactConfig
	41, // 8: api.job.v1.JobDetail.label_selector:type_name -> api.job.v1.LabelSelector
	46, // 9: api.job.v1.JobDetail.agent_labels:type_name -> api.job.v1.JobDetail.AgentLabelsEntry
	0,  // 10: api.job.v1.ListJobsRequest.status:type_name -> api.job.v1.JobStatus
	11, // 11: api.job.v1.ListJobsResponse.jobs:type_name -> api.job.v1.JobDetail
	47, // 12: api.job.v1.UpdateJobRequest.env:type_name -> api.job.v1.UpdateJobRequest.EnvEntry
	24, // 13: api.job.v1.GetJobLogResponse.logs:type_name -> api.job.v1.LogLine
	27, // 14: api.job.v1.ListJobArtifactsResponse.artifacts:type_name -> api.job.v1.Artifact
	29, // 15: api.job.v1.CreatePipelineRequest.stages:type_name -> api.job.v1.Stage
	48, // 16: api.job.v1.CreatePipelineRequest.env:type_name -> api.job.v1.CreatePipelineRequest.EnvEntry
	2,  // 17: api.job.v1.CreatePipelineRequest.trigger_type:type_name -> api.job.v1.TriggerType
	30, // 18: api.job.v1.Stage.jobs:type_name -> api.job.v1.JobConfig
	49, // 19: api.job.v1.JobConfig.env:type_name -> api.job.v1.JobConfig.EnvEntry
	7,  // 20: api.job.v1.JobConfig.artifacts:type_name -> api.job.v1.ArtifactConfig
	41, // 21: api.job.v1.JobConfig.label_selector:type_name -> api.job.v1.LabelSelector
	34, // 22: api.job.v1.GetPipelineResponse.pipeline:type_name -> api.job.v1.PipelineDetail
	1,  // 23: api.job.v1.PipelineDetail.status:type_name -> api.job.v1.PipelineStatus
	29, // 24: api.job.v1.PipelineDetail.stages:type_name -> api.job.v1.Stage
	50, // 25: api.job.v1.PipelineDetail.env:type_name -> api.job.v1.PipelineDetail.EnvEntry
	2,  // 26: api.job.v1.PipelineDetail.trigger_type:type_name -> api.job.v1.TriggerType
	1,  // 27: api.job.v1.ListPipelinesRequest.status:type_name -> api.job.v1.PipelineStatus
	34, // 28: api.job.v1.ListPipelinesResponse.pipelines:type_name -> api.job.v1.PipelineDetail
	51, // 29: api.job.v1.TriggerPipelineRequest.env:type_name -> api.job.v1.TriggerPipelineRequest.EnvEntry
	52, // 30: api.job.v1.LabelSelector.match_labels:type_name -> api.job.v1.LabelSelector.MatchLabelsEntry
	42, // 31: api.job.v1.LabelSelector.match_expressions:type_name -> api.job.v1.LabelSelectorRequirement
	3,  // 32: api.job.v1.LabelSelectorRequirement.operator:type_name -> api.job.v1.LabelOperator
	4,  // 33: api.job.v1.Job.Ping:input_type -> api.job.v1.PingRequest
	6,  // 34: api.job.v1.Job.CreateJob:input_type -> api.job.v1.CreateJobRequest
	9,  // 35: api.job.v1.Job.GetJob:input_type -> api.job.v1.GetJobRequest
	12, // 36: api.job.v1.Job.ListJobs:input_type -> api.job.v1.ListJobsRequest
	14, // 37: api.job.v1.Job.UpdateJob:input_type -> api.job.v1.UpdateJobRequest
	16, // 38: api.job.v1.Job.DeleteJob:input_type -> api.job.v1.DeleteJobRequest
	18, // 39: api.job.v1.Job.CancelJob:input_type -> api.job.v1.CancelJobRequest
	20, // 40: api.job.v1.Job.RetryJob:input_type -> api.job.v1.RetryJobRequest
	22, // 41: api.job.v1.Job.GetJobLog:input_type -> api.job.v1.GetJobLogRequest
	25, // 42: api.job.v1.Job.ListJobArtifacts:input_type -> api.job.v1.ListJobArtifactsRequest
	28, // 43: api.job.v1.Job.CreatePipeline:input_type -> api.job.v1.CreatePipelineRequest
	32, // 44: api.job.v1.Job.GetPipeline:input_type -> api.job.v1.GetPipelineRequest
	35, // 45: api.job.v1.Job.ListPipelines:input_type -> api.job.v1.ListPipelinesRequest
	37, // 46: api.job.v1.Job.TriggerPipeline:input_type -> api.job.v1.TriggerPipelineRequest
	39, // 47: api.job.v1.Job.StopPipeline:input_type -> api.job.v1.StopPipelineRequest
	5,  // 48: api.job.v1.Job.Ping:output_type -> api.job.v1.PingResponse
	8,  // 49: api.job.v1.Job.CreateJob:output_type -> api.job.v1.CreateJobResponse
	10, // 50: api.job.v1.Job.GetJob:output_type -> api.job.v1.GetJobResponse
	13, // 51: api.job.v1.Job.ListJobs:output_type -> api.job.v1.ListJobsResponse
	15, // 52: api.job.v1.Job.UpdateJob:output_type -> api.job.v1.UpdateJobResponse
	17, // 53: api.job.v1.Job.DeleteJob:output_type -> api.job.v1.DeleteJobResponse
	19, // 54: api.job.v1.Job.CancelJob:output_type -> api.job.v1.CancelJobResponse
	21, // 55: api.job.v1.Job.RetryJob:output_type -> api.job.v1.RetryJobResponse
	23, // 56: api.job.v1.Job.GetJobLog:output_type -> api.job.v1.GetJobLogResponse
	26, // 57: api.job.v1.Job.ListJobArtifacts:output_type -> api.job.v1.ListJobArtifactsResponse
	31, // 58: api.job.v1.Job.CreatePipeline:output_type -> api.job.v1.CreatePipelineResponse
	33, // 59: api.job.v1.Job.GetPipeline:output_type -> api.job.v1.GetPipelineResponse
	36, // 60: api.job.v1.Job.ListPipelines:output_type -> api.job.v1.ListPipelinesResponse
	38, // 61: api.job.v1.Job.TriggerPipeline:output_type -> api.job.v1.TriggerPipelineResponse
	40, // 62: api.job.v1.Job.StopPipeline:output_type -> api.job.v1.StopPipelineResponse
	48, // [48:63] is the sub-list for method output_type
	33, // [33:48] is the sub-list for method input_type
	33, // [33:33] is the sub-list for extension type_name
	33, // [33:33] is the sub-list for extension extendee
	0,  // [0:33] is the sub-list for field type_name
}

func init() { file_api_job_v1_proto_job_proto_init() }
func file_api_job_v1_proto_job_proto_init() {
	if File_api_job_v1_proto_job_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_api_job_v1_proto_job_proto_rawDesc), len(file_api_job_v1_proto_job_proto_rawDesc)),
			NumEnums:      4,
			NumMessages:   49,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_api_job_v1_proto_job_proto_goTypes,
		DependencyIndexes: file_api_job_v1_proto_job_proto_depIdxs,
		EnumInfos:         file_api_job_v1_proto_job_proto_enumTypes,
		MessageInfos:      file_api_job_v1_proto_job_proto_msgTypes,
	}.Build()
	File_api_job_v1_proto_job_proto = out.File
	file_api_job_v1_proto_job_proto_goTypes = nil
	file_api_job_v1_proto_job_proto_depIdxs = nil
}
